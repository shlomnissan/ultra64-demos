/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm0_0, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|                |
	|                |
	|              ..|
	|            ....|
	|           ....,|
	|          ....,,|
	|        ....,,~~|
	|       ....,~~~~|
	|       ...~~~~~~|
	|      ...~~~~~~~|
	|     ...~~~~~~~~|
	|    ...~+~~~~~~~|
	|   ...~++~~~~~~~|
	|   ..,+++~~~~~~~|
	|  ..,~++++~~~~~~|
	|  ..~+++++~~~~~~|
	+----------------+
#endif

static Gfx ball_bm0_0_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm0_0[] = {
	0x1884, 0x1884, 0x1044, 0x1884, 0x1042, 0x1844, 0x1044, 0x1042, 0x1042, 0x1042, 0x1082, 0x1042, 0x1842, 0x1042, 0x1044, 0x1842, 
	0x1884, 0x1844, 0x1884, 0x1884, 0x1844, 0x1844, 0x1082, 0x1844, 0x1844, 0x1082, 0x1842, 0x1844, 0x1082, 0x1842, 0x1844, 0x1842, 
	0x1884, 0x1884, 0x1844, 0x1884, 0x1884, 0x1842, 0x1844, 0x1844, 0x1844, 0x1082, 0x1842, 0x1044, 0x1882, 0x1842, 0x1844, 0x1082, 
	0x1884, 0x1884, 0x1844, 0x1886, 0x1842, 0x1844, 0x1884, 0x1082, 0x1844, 0x1842, 0x1884, 0x1042, 0x1842, 0x2884, 0x1082, 0x1844, 
	0x1884, 0x1886, 0x1844, 0x1884, 0x1884, 0x1842, 0x1884, 0x1042, 0x1844, 0x1844, 0x1842, 0x1082, 0x1844, 0x2084, 0x38c5, 0x4907, 
	0x1884, 0x1844, 0x1886, 0x1884, 0x1844, 0x1882, 0x1844, 0x1884, 0x1844, 0x1882, 0x1844, 0x1844, 0x5987, 0x6947, 0x28c4, 0x4907, 
	0x1886, 0x1884, 0x1844, 0x1884, 0x1844, 0x1884, 0x1884, 0x1042, 0x1844, 0x1884, 0x1882, 0x38c6, 0x5987, 0x7189, 0x71c9, 0x7987, 
	0x1884, 0x1844, 0x1886, 0x1884, 0x1842, 0x1884, 0x1844, 0x1882, 0x4107, 0x6189, 0x1884, 0x2884, 0x81c9, 0x81c9, 0x79c9, 0x820b, 
	0x1884, 0x1884, 0x1844, 0x1884, 0x1844, 0x1884, 0x1882, 0x1844, 0x28c6, 0x4947, 0x71cb, 0x8a0b, 0x8a4b, 0x8a09, 0x8a0b, 0x9209, 
	0x1884, 0x1884, 0x1844, 0x1886, 0x1842, 0x28c6, 0x1882, 0x1884, 0x924d, 0x924b, 0x4949, 0x824d, 0x89c9, 0x8a09, 0x8a09, 0x81c9, 
	0x1884, 0x1884, 0x1844, 0x1884, 0x1844, 0x1884, 0x2884, 0x5189, 0x824d, 0x928f, 0x924b, 0x820b, 0x89c9, 0x8209, 0x89c9, 0x920b, 
	0x1884, 0x1884, 0x1884, 0x2086, 0x4988, 0x8a8f, 0x1844, 0x20c4, 0x920d, 0x8a09, 0x9acf, 0x924d, 0x8a09, 0x9a0b, 0x8a09, 0x8a0b, 
	0x1884, 0x1884, 0x1844, 0x1884, 0x2084, 0x414a, 0x8a8f, 0x9ad1, 0x928f, 0x8a4b, 0x924b, 0x8a0b, 0x8a0b, 0x81c9, 0x8a09, 0x9a09, 
	0x1884, 0x2084, 0x1884, 0x1884, 0xa313, 0x928f, 0x3106, 0x7a4f, 0x924d, 0x8a0b, 0x928d, 0x928d, 0x8189, 0x79c9, 0x79c9, 0x7187, 
	0x1884, 0x1884, 0x1884, 0x28c6, 0x59cd, 0x9ad3, 0x9b11, 0x9a8f, 0x928d, 0x9a8d, 0x924d, 0x8209, 0x7189, 0x7189, 0x7987, 0x7187, 
	0x2086, 0x3948, 0x1884, 0x2086, 0xa311, 0xa2cf, 0x8291, 0x9ad3, 0x9a8b, 0x8a0b, 0x9a8d, 0x9a8d, 0x7989, 0x7187, 0x8209, 0x8189, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm0_1, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|   ...........,.|
	| .......,,,,,~~,|
	|.....,,,~~~~~~~~|
	|..,,,,~~~~~~~~~~|
	|,,,,~~~~~~~~++~~|
	|,,~~~~+++~~++++~|
	|~~~~++++~~++++++|
	|~~++++++++++++++|
	|~~+++++++++++++~|
	|~++++++++++++++~|
	|~++++++~~++++++~|
	|~++++~~~~~+++~~~|
	|~~~~~~~~~~~+~~~~|
	|~~~~~~~~~~~~~~~~|
	|~~~~~~~~~~~~~~~~|
	|~~~,,~~~~~~~~~~~|
	+----------------+
#endif

static Gfx ball_bm0_1_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm0_1[] = {
	0x1042, 0x1844, 0x1042, 0x1042, 0x1042, 0x1882, 0x1844, 0x1882, 0x2084, 0x2082, 0x2885, 0x38c5, 0x4105, 0x48c5, 0x5107, 0x4905, 
	0x1842, 0x1882, 0x1042, 0x1844, 0x30c5, 0x4105, 0x1882, 0x2884, 0x6147, 0x7187, 0x4905, 0x5107, 0x8187, 0x7985, 0x7947, 0x81c7, 
	0x1842, 0x1884, 0x2082, 0x30c5, 0x38c5, 0x4107, 0x5145, 0x6947, 0x7987, 0x89c9, 0x99c7, 0x9a09, 0x99c9, 0x9a07, 0x99c7, 0x99c7, 
	0x4107, 0x5105, 0x2884, 0x30c5, 0x81c7, 0x89c9, 0x6147, 0x7187, 0xa207, 0xa209, 0x9a09, 0xa1c9, 0x9a07, 0x99c7, 0xa209, 0xa207, 
	0x4907, 0x5147, 0x6947, 0x6987, 0x81c9, 0x91c7, 0x9a09, 0xa24b, 0xaa09, 0xa249, 0xa209, 0xaa49, 0xb24b, 0xb249, 0xa207, 0x91c9, 
	0x7187, 0x81c9, 0x6947, 0x6989, 0xaa49, 0xaa4b, 0x9a49, 0xaa49, 0xaa09, 0xb28b, 0xaa49, 0xaa09, 0xaa8b, 0xaa09, 0xb289, 0xb28b, 
	0x7189, 0x7989, 0x8a09, 0xa249, 0xaa4b, 0xb24b, 0xb289, 0xaa4b, 0xaa09, 0xaa49, 0xaa4b, 0xb289, 0xb24b, 0xb249, 0xb28b, 0xaa49, 
	0xaa8b, 0xb28b, 0x81c9, 0x8a09, 0xb28b, 0xaa49, 0xb28b, 0xb28b, 0xb24b, 0xb289, 0xaa4b, 0xb289, 0xaa4b, 0xaa49, 0xb24b, 0xaa89, 
	0x920b, 0x9a4b, 0xbacb, 0xb30d, 0xba8b, 0xb28b, 0xb28b, 0xb28b, 0xb28b, 0xb249, 0xaa8b, 0xb249, 0xb28b, 0xb28b, 0xb249, 0xa249, 
	0xb2cd, 0xbacd, 0x9209, 0xa24b, 0xb28b, 0xb28b, 0xb2cb, 0xb28b, 0xb28b, 0xba89, 0xaa4b, 0xb28b, 0xaa49, 0xaa0b, 0xb2cb, 0xb28b, 
	0x920b, 0xaa8b, 0xb2cb, 0xb28d, 0xb28b, 0xb289, 0xaa4b, 0xaa49, 0xaa49, 0xb24b, 0xb289, 0xb2cb, 0xba8b, 0xaa4b, 0xaa49, 0xaa09, 
	0xb28b, 0xaa8b, 0x9a0b, 0xaa8b, 0x9a09, 0x9a09, 0xaa49, 0xaa49, 0xaa8b, 0xb28b, 0xa209, 0xaa49, 0xaa09, 0xa209, 0xb28b, 0xaa09, 
	0x9a0b, 0x9a49, 0x9a4b, 0x9a09, 0x9a09, 0x91c9, 0x89c7, 0x89c7, 0x99c9, 0x9a09, 0xaa49, 0xaa49, 0xaa09, 0xa249, 0xaa09, 0x99c9, 
	0x8a09, 0x89c9, 0x8189, 0x81c7, 0x7989, 0x7987, 0x8987, 0x8187, 0x9a09, 0xa209, 0x8987, 0x9a09, 0xa207, 0xa209, 0xa209, 0xa209, 
	0x7187, 0x7989, 0x89c7, 0x7989, 0x7987, 0x8187, 0x8187, 0x8187, 0x8187, 0x91c9, 0x9a07, 0x99c9, 0x9a07, 0xaa09, 0x9a09, 0x99c7, 
	0x7987, 0x7987, 0x7149, 0x81c7, 0x8187, 0x8987, 0x7147, 0x7987, 0x99c7, 0x9a09, 0x8987, 0x99c7, 0x9209, 0x9187, 0xa209, 0xaa49, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm0_2, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|............    |
	|,,,,,,,.......  |
	|~~~~~~~~,,,.....|
	|~~~~~~~~~~~,,...|
	|~~~~~~~~~~~~~~,.|
	|~~~~~+~~+~~~~~~,|
	|+~~~~++++++~~~~~|
	|+~~~~~~++~~~~~~~|
	|~~~~~~~~+~~~~~~~|
	|~~~~~~~~~~+~~~~+|
	|~~~~~~~~~~~~~~++|
	|~~~~~~~~~~~~~~++|
	|~~~~~~~~~~++++++|
	|~~~~~~~~~~~~~+++|
	|~~~~~~~~~~~~~~++|
	|~~~~~~~~~~~~~~~~|
	+----------------+
#endif

static Gfx ball_bm0_2_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm0_2[] = {
	0x4905, 0x40c5, 0x38c5, 0x38c5, 0x3085, 0x2082, 0x2884, 0x1882, 0x1842, 0x1882, 0x1042, 0x1842, 0x1042, 0x1042, 0x1042, 0x1844, 
	0x7947, 0x7987, 0x7947, 0x7985, 0x6107, 0x5105, 0x7147, 0x6947, 0x2082, 0x2042, 0x40c5, 0x30c4, 0x1842, 0x1044, 0x1842, 0x1842, 
	0x91c7, 0x9987, 0x91c7, 0x99c7, 0x99c7, 0x99c7, 0x8987, 0x8187, 0x7947, 0x7145, 0x6107, 0x40c5, 0x3082, 0x2082, 0x1042, 0x1844, 
	0x99c7, 0x99c7, 0x99c7, 0x91c7, 0x9187, 0x8987, 0xa209, 0x99c7, 0x8987, 0x7947, 0x8187, 0x8987, 0x3084, 0x2082, 0x6905, 0x5107, 
	0x99c7, 0x91c7, 0x9187, 0x99c7, 0xa1c9, 0xa209, 0x99c7, 0x99c7, 0x99c7, 0x99c9, 0x91c7, 0x8987, 0x9187, 0x8187, 0x7147, 0x48c5, 
	0x99c9, 0xa1c7, 0xa249, 0xa1c7, 0xa249, 0xb249, 0xa209, 0xaa49, 0xaa09, 0x9187, 0xb249, 0xaa49, 0x9187, 0x7985, 0x9187, 0x99c9, 
	0xb249, 0xa249, 0x99c9, 0xa207, 0xaa09, 0xaa89, 0xb24b, 0xb249, 0xb28b, 0xaa49, 0xb249, 0xa209, 0x99c7, 0xa1c7, 0x99c9, 0x99c7, 
	0xa209, 0x99c7, 0xaa4b, 0xaa47, 0xaa09, 0xaa49, 0xa209, 0xa209, 0xa207, 0xaa09, 0xaa89, 0xaa09, 0xa1c9, 0xa207, 0xa1c9, 0xa207, 
	0xaa49, 0xa209, 0xa1c9, 0x91c7, 0x91c7, 0xa1c7, 0x99c7, 0xaa49, 0xb209, 0xaa49, 0xa209, 0xa207, 0xaa09, 0xa209, 0xaa07, 0xaa09, 
	0x99c7, 0x91c7, 0xa20b, 0xa209, 0x99c7, 0xa207, 0x9187, 0x99c7, 0xaa49, 0xaa09, 0xaa49, 0xb209, 0xaa49, 0xaa49, 0xaa09, 0xa207, 
	0xa209, 0xa209, 0x91c7, 0x8187, 0x9187, 0x99c7, 0x99c7, 0x99c7, 0xa209, 0xaa09, 0xaa49, 0xaa09, 0xa207, 0xaa09, 0xaa49, 0xb289, 
	0x91c7, 0x91c7, 0xa209, 0x91c9, 0x99c7, 0xa1c7, 0x99c7, 0x99c9, 0xaa49, 0xaa07, 0xa209, 0xa209, 0xaa49, 0xb289, 0xaa09, 0xaa09, 
	0xa209, 0x91c7, 0x99c9, 0x9a07, 0xa249, 0x99c7, 0x99c9, 0x99c7, 0xa207, 0xaa49, 0xb24b, 0xb289, 0xaa0b, 0xaa49, 0xb249, 0xb28b, 
	0x91c9, 0x9a07, 0xa209, 0x99c7, 0x91c7, 0x9189, 0x9a07, 0x91c7, 0xa209, 0xa209, 0x91c7, 0xa1c7, 0xb28b, 0xb2cb, 0xaa09, 0xaa49, 
	0x99c9, 0x91c7, 0x9187, 0x89c7, 0x91c9, 0x91c7, 0x8987, 0x8987, 0x91c7, 0xa209, 0xa209, 0xa207, 0xa209, 0xa209, 0xaa49, 0xb28b, 
	0x8187, 0x8147, 0x89c7, 0x8987, 0x8987, 0x8987, 0x8987, 0x9187, 0x9a09, 0xaa09, 0x89c7, 0x99c7, 0xaa09, 0xa249, 0xaa09, 0xa249, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm0_3, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|                |
	|                |
	|.               |
	|...             |
	|....            |
	|,....           |
	|~~,...          |
	|~~~,....        |
	|~+++~...        |
	|+++++~,..       |
	|++++++~...      |
	|+++++++~...     |
	|++++++++~...    |
	|+++++++++,..    |
	|+++++++++~...   |
	|~~~+++++++,..   |
	+----------------+
#endif

static Gfx ball_bm0_3_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm0_3[] = {
	0x1042, 0x1084, 0x1844, 0x1844, 0x1844, 0x1842, 0x1084, 0x1884, 0x1844, 0x1086, 0x1884, 0x1886, 0x2088, 0x2088, 0x2088, 0x0, 
	0x1844, 0x1844, 0x1844, 0x1844, 0x1884, 0x1884, 0x1842, 0x1884, 0x1886, 0x1886, 0x1886, 0x1884, 0x288a, 0x0, 0x2088, 0x28ca, 
	0x1844, 0x1844, 0x1844, 0x1844, 0x1082, 0x1884, 0x1884, 0x1844, 0x1884, 0x1886, 0x1886, 0x1886, 0x2088, 0x288a, 0x28ca, 0x0, 
	0x1844, 0x1844, 0x1884, 0x1884, 0x1882, 0x1846, 0x1882, 0x1884, 0x1886, 0x1886, 0x2084, 0x1886, 0x208a, 0x0, 0x2088, 0x28c8, 
	0x48c5, 0x2084, 0x2082, 0x1044, 0x1882, 0x1884, 0x1884, 0x1844, 0x1884, 0x1886, 0x1886, 0x2086, 0x2088, 0x208a, 0x28c8, 0x0, 
	0x30c4, 0x2044, 0x7985, 0x5907, 0x1844, 0x1884, 0x1844, 0x1882, 0x1886, 0x2048, 0x1884, 0x1886, 0x20c8, 0x0, 0x2088, 0x288a, 
	0x99c7, 0x8187, 0x6907, 0x4104, 0x2084, 0x2044, 0x1884, 0x1884, 0x1884, 0x1886, 0x1886, 0x2086, 0x2088, 0x288a, 0x28ca, 0x0, 
	0x99c9, 0x79c9, 0xa1c7, 0xa1c7, 0x1886, 0x1884, 0x5107, 0x2884, 0x1886, 0x2086, 0x1886, 0x1884, 0x20ca, 0x0, 0x2088, 0x288a, 
	0xaa09, 0xaa49, 0xb28b, 0xb28b, 0x920b, 0x5947, 0x30c4, 0x1886, 0x1884, 0x1886, 0x2086, 0x1886, 0x2088, 0x288a, 0x28c8, 0x0, 
	0xbacd, 0xc30b, 0xaa4b, 0xba8b, 0x5947, 0x30c6, 0xb2cd, 0x9209, 0x1886, 0x2088, 0x2084, 0x1886, 0x20ca, 0x0, 0x2088, 0x2888, 
	0xb28b, 0xba8b, 0xbb0d, 0xc30d, 0xc30d, 0xb28d, 0x920b, 0x5147, 0x28c6, 0x2086, 0x1886, 0x2086, 0x2088, 0x20ca, 0x288a, 0x0, 
	0xc30d, 0xc30f, 0xb289, 0xb28b, 0xb2cd, 0x9a4d, 0xbb0d, 0xc2cd, 0x1886, 0x2088, 0x5188, 0x2086, 0x28ca, 0x0, 0x2088, 0x288a, 
	0xb28b, 0xba8b, 0xbacb, 0xbacd, 0xc30f, 0xc30d, 0xc34f, 0xb2cf, 0x924d, 0x4148, 0x2086, 0x2086, 0x2088, 0x28ca, 0x288a, 0x0, 
	0xb28b, 0xbacb, 0xbacb, 0xba8d, 0xc34f, 0xc34f, 0xc2cd, 0xc34f, 0x30c8, 0x2086, 0xb2cf, 0x720d, 0x28ca, 0x0, 0x2088, 0x288a, 
	0xb28b, 0xb28b, 0xb249, 0xbacd, 0xbb0d, 0xc30d, 0xcb4f, 0xc351, 0xbb0f, 0xa28d, 0x514b, 0x28c8, 0x2088, 0x28ca, 0x288a, 0x0, 
	0xaa49, 0xb28b, 0xaa09, 0x9a09, 0xcb4f, 0xc30f, 0xbb0d, 0xc30d, 0x71cd, 0x3908, 0xbacf, 0xaacf, 0x28c8, 0x0, 0x288a, 0x28ca, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm1_0, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|  ..~+++++~~~~~~|
	| ..,+++++++~~~~~|
	| ..~++~~+++~~~~~|
	|..,++~~~~++~~~~~|
	|..~++~~~~~~~~~~~|
	|..~+~~~~~~~~~~,,|
	|.,~+~~~~~~~~~~,,|
	|.,~~~~~~~,,,~~,,|
	|.~~~~~~~~,,~~~,,|
	|.~~~~~~,,,~~~,,,|
	|,~~~~~~,,,,,,,,.|
	|,~~~~~~,,,,,,,,.|
	|,~~~~~,,,,,,,,,.|
	|,~~~~,,,,,,,,,,.|
	|,,~~~,,,,,,,,,,,|
	|,,~~,,,,,,,,,,,,|
	+----------------+
#endif

static Gfx ball_bm1_0_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm1_0[] = {
	0x1884, 0x1886, 0x2084, 0x414a, 0x8291, 0x9ad1, 0xa311, 0xa2d1, 0x9acd, 0x9a4d, 0x9a8d, 0x8a09, 0x81cb, 0x79c7, 0x79c9, 0x7947, 
	0x28c6, 0x6a51, 0x1884, 0x1886, 0xa2cf, 0xa2cf, 0x92d3, 0x9b13, 0xa24b, 0x924d, 0xa2cf, 0xa28d, 0x7187, 0x7987, 0x820b, 0x79c9, 
	0x1886, 0x2084, 0x414a, 0x8b17, 0x9b13, 0x9a91, 0x928d, 0x928d, 0x9a8d, 0xa28d, 0xa28f, 0x9a4b, 0x8209, 0x7189, 0x7987, 0x7987, 
	0x6211, 0x9b55, 0x1886, 0x20c6, 0x8a0d, 0x824b, 0x9ad3, 0x928f, 0xa28d, 0x924b, 0x928d, 0xa28f, 0x7987, 0x7987, 0x81c9, 0x79c9, 
	0x1886, 0x3908, 0x7ad5, 0x9315, 0x92d1, 0x924d, 0x820d, 0x824b, 0x8a4d, 0x8a4d, 0x924b, 0x820b, 0x81c9, 0x81c9, 0x7987, 0x7187, 
	0x82d3, 0x8ad3, 0x2086, 0x414a, 0x824b, 0x820b, 0x8a8f, 0x8a4d, 0x820b, 0x69cb, 0x820b, 0x720b, 0x7147, 0x6947, 0x71c9, 0x7987, 
	0x20c6, 0x59cd, 0x7293, 0x8a91, 0x8a4d, 0x824d, 0x8a0b, 0x7a09, 0x69cb, 0x69c9, 0x69cb, 0x6989, 0x6987, 0x79c9, 0x6147, 0x5947, 
	0x7a91, 0x8a91, 0x28c6, 0x620f, 0x820b, 0x7209, 0x8a4f, 0x820b, 0x6189, 0x6189, 0x69c9, 0x5989, 0x6147, 0x4907, 0x71c9, 0x71c7, 
	0x3108, 0x7a51, 0x8293, 0x828f, 0x8a4d, 0x824b, 0x820b, 0x69c9, 0x69c9, 0x618b, 0x6987, 0x69c9, 0x71c9, 0x7189, 0x5105, 0x4147, 
	0x8a91, 0x8a8f, 0x414a, 0x7a93, 0x7a0b, 0x6189, 0x824d, 0x8a0b, 0x69c9, 0x7189, 0x61c9, 0x6189, 0x4105, 0x3907, 0x7187, 0x5987, 
	0x51cf, 0x7a93, 0x828f, 0x824f, 0x7a0b, 0x820b, 0x71cb, 0x5989, 0x5989, 0x6189, 0x6989, 0x6989, 0x6187, 0x4107, 0x3905, 0x30c5, 
	0x824f, 0x7a4d, 0x51cf, 0x7a91, 0x618b, 0x5189, 0x7a0b, 0x7a0b, 0x5949, 0x6189, 0x5147, 0x5989, 0x30c5, 0x30c5, 0x5147, 0x4107, 
	0x51cf, 0x6a4f, 0x7a0d, 0x7a4d, 0x71cb, 0x71cb, 0x518b, 0x5187, 0x4949, 0x5149, 0x5147, 0x4947, 0x4907, 0x3905, 0x3105, 0x30c5, 
	0x720d, 0x7a0b, 0x49cf, 0x61cd, 0x5189, 0x4149, 0x69cb, 0x6189, 0x4947, 0x4107, 0x4147, 0x4947, 0x30c5, 0x30c7, 0x4105, 0x3905, 
	0x498d, 0x59cd, 0x720d, 0x720b, 0x61cb, 0x5989, 0x5149, 0x3907, 0x4107, 0x4107, 0x4105, 0x4107, 0x3907, 0x4105, 0x38c5, 0x3107, 
	0x6a0d, 0x720b, 0x414b, 0x518d, 0x4947, 0x3907, 0x59cb, 0x5949, 0x3905, 0x3905, 0x38c7, 0x3905, 0x3907, 0x3905, 0x3905, 0x3907, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm1_1, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|~~~,,~~~~~~~~~~~|
	|~~~,,,~~~~~~~~~~|
	|~~,,,,,,~~~~~~~~|
	|~~,,,,,,~~~~~~~~|
	|~,,,,,~~~~~~~,,~|
	|,,,,,~~~~~~~~~~~|
	|,,,,,~~~~~~~~~~~|
	|,,,,~~~~~~~~~~~~|
	|,,,,~~~~~~~~~~~~|
	|,,,,~~~~~~~~~~~~|
	|.,,,~~~~~~~~~~~~|
	|..,~~~~~~~~~~~~~|
	|..,,,~~~~~~~~~~,|
	|.,,,,,~~~~~~~~,,|
	|,,,,,,,~~~~~~~,,|
	|,,,,,,,,~~~~~,,,|
	+----------------+
#endif

static Gfx ball_bm1_1_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm1_1[] = {
	0x7987, 0x7989, 0x7987, 0x7987, 0x7147, 0x7987, 0x7987, 0x9187, 0x89c7, 0x99c7, 0x91c9, 0xa1c9, 0xa247, 0xa20b, 0x9a07, 0x9187, 
	0x7987, 0x7147, 0x7187, 0x81c9, 0x8187, 0x8187, 0x6945, 0x7147, 0x9a07, 0xa1c9, 0x89c7, 0x99c7, 0x8987, 0x8187, 0xa1c9, 0x91c7, 
	0x7987, 0x7989, 0x7987, 0x6945, 0x6147, 0x7147, 0x7147, 0x7947, 0x81c7, 0x99c7, 0x91c7, 0x99c7, 0x91c7, 0x9187, 0x8187, 0x8987, 
	0x7187, 0x6947, 0x7987, 0x7947, 0x6947, 0x7987, 0x6105, 0x6947, 0x99c7, 0x91c7, 0x8187, 0x99c9, 0x8145, 0x8187, 0x8987, 0x8187, 
	0x7187, 0x7147, 0x6147, 0x6947, 0x6147, 0x7145, 0x7947, 0x8187, 0x91c7, 0x8987, 0x9187, 0x8185, 0x8187, 0x8147, 0x7947, 0x8185, 
	0x6947, 0x6145, 0x6947, 0x6947, 0x8987, 0x91c7, 0x6947, 0x8187, 0x8987, 0x8987, 0x8987, 0x91c7, 0x8147, 0x8185, 0x8147, 0x7945, 
	0x5947, 0x6907, 0x6987, 0x7147, 0x7187, 0x8987, 0x99c7, 0x91c7, 0x91c7, 0x9187, 0x99c9, 0x89c7, 0x8987, 0x8947, 0x8185, 0x7987, 
	0x6947, 0x7987, 0x5107, 0x5945, 0x99c7, 0x99c7, 0x7987, 0x91c9, 0x91c7, 0x91c7, 0x91c7, 0x9187, 0x8187, 0x8147, 0x8987, 0x8987, 
	0x4105, 0x4907, 0x6147, 0x7187, 0x7947, 0x89c7, 0x99c7, 0xa209, 0x91c7, 0x91c7, 0x9187, 0x91c7, 0x99c7, 0x91c7, 0x8987, 0x8987, 
	0x5947, 0x6147, 0x3905, 0x4107, 0x91c7, 0x99c9, 0x7187, 0x91c7, 0x91c7, 0x9a09, 0x99c7, 0x91c9, 0x9a07, 0x9187, 0xa209, 0xaa49, 
	0x30c5, 0x3907, 0x4905, 0x6987, 0x8189, 0x8a07, 0x99c9, 0x91c7, 0x91c9, 0x91c7, 0x89c7, 0x99c9, 0xa207, 0xa209, 0xa209, 0x9a07, 
	0x5147, 0x7147, 0x2905, 0x30c5, 0xa209, 0x9a09, 0x7187, 0x89c9, 0x91c7, 0x91c7, 0x91c7, 0x91c9, 0x91c7, 0x81c7, 0x99c9, 0x99c9, 
	0x30c5, 0x30c5, 0x4947, 0x7147, 0x6187, 0x7987, 0x9209, 0x99c9, 0x91c7, 0x91c7, 0x91c7, 0x91c9, 0x99c7, 0x9209, 0x7987, 0x6947, 
	0x4907, 0x6147, 0x30c5, 0x3105, 0x8987, 0x9209, 0x5905, 0x6187, 0x91c7, 0x91c9, 0x91c7, 0x91c7, 0x7147, 0x5147, 0x99c7, 0x9209, 
	0x30c5, 0x38c5, 0x5147, 0x5905, 0x5947, 0x5105, 0x6987, 0x8987, 0x91c7, 0x91c7, 0x9187, 0x91c7, 0x89c9, 0x7987, 0x7187, 0x5907, 
	0x4905, 0x5947, 0x38c5, 0x3105, 0x6107, 0x6987, 0x6105, 0x5147, 0x8187, 0x7987, 0x8187, 0x8187, 0x6947, 0x6987, 0x7947, 0x7187, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm1_2, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|~~~~~~~~~~~~~~~~|
	|~~~~~~~~~~~~~~~~|
	|~~~~~~~~~~~~~~~~|
	|~~~~~~~,~~~~~~~~|
	|~~~~~~~~~~~~~~~~|
	|~~~~~~~~~~~~~~~+|
	|~~~~~~~~~~~~~~~+|
	|~~~~~~~~~~~~~~~+|
	|~~~~~~~~~~~~~~~~|
	|~~~~~~~~~~~~~~~~|
	|~~~~~~~~~~~~~~~~|
	|~~~~~~~~~~~~~~~~|
	|,~~~~~~~~~~~~~~~|
	|,,,,~~~~~~~~~~~~|
	|,,,,,,,~~~~~~~~~|
	|,,,,,,,,~~~~~~~~|
	+----------------+
#endif

static Gfx ball_bm1_2_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm1_2[] = {
	0x8987, 0x89c7, 0x8147, 0x8187, 0x8987, 0x8987, 0x8987, 0x8987, 0x91c7, 0x99c9, 0xa207, 0xa209, 0xaa09, 0xa249, 0xaa09, 0xa249, 
	0x8187, 0x8187, 0x8187, 0x8187, 0x8987, 0x8987, 0x8987, 0x8187, 0x9187, 0x99c7, 0x89c7, 0x8987, 0xaa09, 0xa209, 0xa209, 0xaa09, 
	0x8187, 0x8987, 0x8187, 0x8187, 0x8987, 0x8187, 0x8187, 0x8987, 0x8147, 0x8187, 0x8987, 0x9187, 0x9a09, 0xa1c7, 0xa209, 0xa249, 
	0x91c7, 0x8187, 0x8987, 0x91c7, 0x7947, 0x8147, 0x8185, 0x8987, 0x8187, 0x9187, 0x7987, 0x8147, 0xaa09, 0xa249, 0x99c7, 0xa209, 
	0x8187, 0x8987, 0x8987, 0x8987, 0x99c7, 0x8987, 0x8987, 0x7987, 0x8987, 0x91c7, 0x91c7, 0x91c7, 0x9189, 0x9a07, 0xaa09, 0xaa49, 
	0x8187, 0x91c7, 0x8147, 0x8187, 0x9187, 0x8987, 0xa207, 0x99c9, 0xa207, 0x89c9, 0x99c7, 0xa209, 0xaa49, 0xaa49, 0x8987, 0x99c7, 
	0x8187, 0x7945, 0x8147, 0x89c7, 0x91c7, 0x99c9, 0x9187, 0x91c7, 0xa209, 0xaa49, 0xa209, 0x99c7, 0x91c9, 0x99c7, 0xa209, 0xb289, 
	0x8187, 0x8987, 0x8147, 0x8187, 0x8987, 0x91c7, 0x99c7, 0x8989, 0x9a07, 0xa1c9, 0x9a09, 0xa249, 0xa209, 0xaa49, 0x99c7, 0x99c9, 
	0x8987, 0x8987, 0x8987, 0x91c7, 0x99c7, 0x91c7, 0x9189, 0x91c7, 0x91c9, 0x91c7, 0x91c7, 0x9187, 0x89c7, 0x99c9, 0x9a09, 0xaa09, 
	0x99c7, 0x99c7, 0x91c7, 0x91c7, 0x99c9, 0x91c7, 0x99c7, 0x99c9, 0x91c7, 0x8185, 0x9989, 0x91c7, 0xa209, 0xaa49, 0x8987, 0x99c9, 
	0x9a09, 0x99c7, 0x99c7, 0x99c9, 0x9a07, 0x99c7, 0x99c7, 0x99c7, 0x91c7, 0x99c9, 0x91c7, 0x8187, 0x9187, 0x99c7, 0xa209, 0xa209, 
	0x99c9, 0x9a09, 0x89c7, 0x9187, 0xa207, 0x99c9, 0x9a07, 0xa1c9, 0x89c7, 0x9187, 0x99c7, 0x91c7, 0x99c9, 0x99c9, 0x99c7, 0x99c7, 
	0x6947, 0x7987, 0x81c7, 0x91c7, 0x9209, 0x99c9, 0x99c7, 0x99c7, 0x99c7, 0x99c7, 0x91c7, 0x9187, 0x91c9, 0x99c7, 0x99c7, 0xa209, 
	0x6147, 0x6985, 0x5107, 0x5905, 0x89c7, 0x9189, 0x7987, 0x7987, 0x91c7, 0x7947, 0x91c7, 0x99c7, 0x99c7, 0xa209, 0x8187, 0x91c7, 
	0x6147, 0x5105, 0x5147, 0x5905, 0x5947, 0x6947, 0x7145, 0x8187, 0x9187, 0x91c7, 0x89c7, 0x7947, 0x8187, 0x91c7, 0x9187, 0xa209, 
	0x5947, 0x5105, 0x6947, 0x6145, 0x5907, 0x6147, 0x5105, 0x4945, 0x8987, 0x8187, 0x7947, 0x8987, 0x8987, 0x91c7, 0x8987, 0x9187, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm1_3, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|~~~+++++++,..   |
	|~~~+++++++~...  |
	|~~~++++o+++,..  |
	|~~~++++o+++~... |
	|~~~++++++o+~,.. |
	|+++~++++++++,.. |
	|+++++~++++++~.. |
	|++++++++++++~,. |
	|~~++~~+++++++,. |
	|~+~~~~~+++++~,. |
	|~~~~~~~~++++~,. |
	|~~~~~~~~~++~~,. |
	|~~~~~~~~~~~~,,. |
	|~~~~~~~~~~~~,,, |
	|~~~~~~~~~~~~,,, |
	|~~~~~~~~~~~~,,, |
	+----------------+
#endif

static Gfx ball_bm1_3_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm1_3[] = {
	0xa209, 0xa209, 0xaa49, 0xb28b, 0xc2cd, 0xc30d, 0xc34f, 0xc34f, 0xbacf, 0xaacf, 0x79cb, 0x310a, 0x2888, 0x28ca, 0x28ca, 0x0, 
	0xa209, 0xb28b, 0xa1c9, 0x9a07, 0xc30f, 0xc34f, 0xbacd, 0xc30d, 0x924d, 0x410b, 0xc30f, 0xb2cf, 0x208a, 0x0, 0x28c8, 0x28ca, 
	0xa209, 0xa209, 0xa209, 0xb28b, 0xb2cb, 0xc2cd, 0xc34f, 0xcb91, 0xc351, 0xb2cf, 0xa28d, 0x698d, 0x310a, 0x288a, 0x28ca, 0x0, 
	0xaa49, 0xb28d, 0xa209, 0xa249, 0xcb0f, 0xc391, 0xbacd, 0xc30b, 0xaa91, 0x824d, 0xc351, 0xc311, 0x20ca, 0x0, 0x410b, 0x30ca, 
	0xaa49, 0xa249, 0xaa09, 0xb24b, 0xb2cb, 0xba8d, 0xbacd, 0xbb4f, 0xc34f, 0xc353, 0xbb11, 0x924f, 0x598d, 0x30ca, 0x28ca, 0x0, 
	0xaa4b, 0xaa49, 0xb249, 0xaa4b, 0xb28b, 0xbacd, 0xaa4b, 0xb24b, 0xbb53, 0xaad1, 0xbb4f, 0xc353, 0x28ca, 0x0, 0x71cd, 0x390c, 
	0xb249, 0xaa8b, 0xb24b, 0xaa49, 0xaa49, 0xaa4b, 0xb24b, 0xbacb, 0xbb0f, 0xc351, 0xc353, 0xb313, 0x7a4f, 0x410d, 0x28ca, 0x0, 
	0xb28b, 0xb28b, 0xaa49, 0xb249, 0xaa4b, 0xbacd, 0xaa49, 0xaa4b, 0xc311, 0xb353, 0xc30f, 0xbb4f, 0x28ca, 0x0, 0x8a51, 0x414d, 
	0xaa49, 0xaa09, 0xaa49, 0xaa8b, 0xaa09, 0xa209, 0xaa4b, 0xb28d, 0xbb0f, 0xc34f, 0xc351, 0xbb15, 0x8ad1, 0x494f, 0x28ca, 0x0, 
	0xaa49, 0xaa09, 0xa249, 0xb24b, 0xa209, 0xaa8d, 0x9a09, 0x91c9, 0xbacf, 0xab13, 0xbb0d, 0xc311, 0x30ca, 0x0, 0x8291, 0x494d, 
	0xa209, 0xaa49, 0xaa09, 0xa249, 0xa1c9, 0x89c9, 0x81c7, 0x9a0b, 0xaa8d, 0xb2cf, 0xaa8d, 0x9a8f, 0x71cf, 0x494d, 0x310b, 0x0, 
	0xa209, 0xaa09, 0x9a07, 0xa1c9, 0x7989, 0x7987, 0xa209, 0x89c9, 0xa24d, 0x920d, 0x920b, 0xaa4d, 0x310d, 0x0, 0x69cd, 0x494d, 
	0xa1c9, 0xa209, 0xaa07, 0xaa49, 0x99c9, 0x91c9, 0x8187, 0x8189, 0x9a0b, 0x9a4b, 0x9a4d, 0x81cd, 0x518d, 0x514d, 0x394d, 0x0, 
	0xaa09, 0xaa49, 0xa207, 0xa209, 0x8989, 0x9189, 0x9a07, 0x8189, 0x920b, 0x718d, 0xa20b, 0x9a4b, 0x410d, 0x0, 0x518b, 0x494d, 
	0xa1c7, 0xa209, 0xa209, 0xaa07, 0x99c9, 0x89c7, 0x8189, 0x9189, 0x9a09, 0x99cb, 0x8a0b, 0x718b, 0x514d, 0x514d, 0x394d, 0x0, 
	0xa209, 0xa1c7, 0x99c7, 0x99c9, 0x89c7, 0x99c9, 0x99c9, 0x91c7, 0x818b, 0x718d, 0x9209, 0x91cb, 0x414d, 0x0, 0x618b, 0x518f, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm2_0, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|,,~~,,,,,,,,,,,,|
	|,,~~,,,,,,,.,,,,|
	|.,,~,,,,,,,,,,,,|
	|.,,,,,,,,,,,,,..|
	|.,,,,,,,,,,,,,..|
	|.,,,,,,,,,,,,,..|
	|..,,,,,,,,,,,,..|
	|..,,,,,,,,,,,,,,|
	|..,,,,,,,,,,,,,,|
	|...,,,,,,,,,,,,,|
	|....,,,,,,,,,,,,|
	|.....,,,,,,,,,,,|
	| .....,,,,,,,,,,|
	| ......,,,,,,,,,|
	|  ......,,,,,,,,|
	|  ......,,,,,,,,|
	+----------------+
#endif

static Gfx ball_bm2_0_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm2_0[] = {
	0x414b, 0x51cd, 0x69cd, 0x720b, 0x618b, 0x5189, 0x4907, 0x3907, 0x3907, 0x3905, 0x30c7, 0x3905, 0x38c7, 0x3905, 0x3907, 0x3905, 
	0x61cd, 0x69cb, 0x3949, 0x518b, 0x3909, 0x3907, 0x5989, 0x5189, 0x30c5, 0x30c5, 0x3107, 0x38c5, 0x38c5, 0x3105, 0x30c5, 0x38c5, 
	0x3109, 0x498b, 0x598b, 0x61cb, 0x5989, 0x4949, 0x4109, 0x3947, 0x38c5, 0x38c7, 0x30c5, 0x30c5, 0x30c5, 0x30c5, 0x3105, 0x30c5, 
	0x518b, 0x618b, 0x2907, 0x414b, 0x4949, 0x4147, 0x5949, 0x4949, 0x3105, 0x38c7, 0x3907, 0x38c5, 0x3105, 0x30c5, 0x30c5, 0x3105, 
	0x28c7, 0x394b, 0x518b, 0x5989, 0x518b, 0x5149, 0x4147, 0x4107, 0x4107, 0x3907, 0x4105, 0x30c5, 0x38c5, 0x3105, 0x30c5, 0x2885, 
	0x4989, 0x5149, 0x20c6, 0x3949, 0x4949, 0x4107, 0x518b, 0x5149, 0x3907, 0x4105, 0x3907, 0x4105, 0x30c5, 0x2885, 0x3905, 0x30c5, 
	0x2086, 0x3107, 0x4149, 0x4989, 0x5189, 0x5189, 0x4949, 0x4907, 0x4147, 0x38c7, 0x4107, 0x4105, 0x3907, 0x38c5, 0x30c5, 0x28c5, 
	0x3909, 0x4149, 0x20c4, 0x28c7, 0x5149, 0x4947, 0x5149, 0x5149, 0x4947, 0x4907, 0x4147, 0x4105, 0x38c7, 0x38c5, 0x4145, 0x40c7, 
	0x1884, 0x28c7, 0x30c7, 0x4147, 0x4949, 0x4949, 0x5147, 0x5149, 0x4907, 0x4945, 0x5147, 0x5147, 0x5147, 0x5107, 0x5105, 0x4905, 
	0x30c7, 0x3107, 0x2084, 0x2086, 0x4947, 0x5149, 0x4147, 0x4947, 0x5107, 0x5947, 0x5147, 0x5147, 0x6105, 0x6147, 0x5947, 0x6107, 
	0x1884, 0x2086, 0x28c5, 0x30c7, 0x3107, 0x4147, 0x4907, 0x5147, 0x5149, 0x5145, 0x5147, 0x6147, 0x5947, 0x6947, 0x6107, 0x6145, 
	0x2085, 0x28c7, 0x2084, 0x1884, 0x4147, 0x4907, 0x2907, 0x38c7, 0x5147, 0x5147, 0x4947, 0x5147, 0x6105, 0x6147, 0x5907, 0x6147, 
	0x1884, 0x1884, 0x2084, 0x2887, 0x20c5, 0x30c5, 0x3907, 0x3907, 0x4947, 0x4907, 0x4945, 0x5107, 0x5147, 0x5947, 0x6147, 0x5947, 
	0x1884, 0x2085, 0x1884, 0x1884, 0x30c5, 0x3907, 0x2085, 0x28c5, 0x4907, 0x4947, 0x4105, 0x4907, 0x5945, 0x5947, 0x5145, 0x5147, 
	0x1884, 0x1884, 0x1884, 0x2084, 0x2085, 0x2085, 0x28c5, 0x30c5, 0x3905, 0x4107, 0x4905, 0x4107, 0x5105, 0x5107, 0x5147, 0x5945, 
	0x1884, 0x1884, 0x1844, 0x1884, 0x2887, 0x28c5, 0x2085, 0x2085, 0x4107, 0x4105, 0x30c7, 0x3905, 0x5145, 0x5907, 0x4907, 0x4945, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm2_1, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|,,,,,,,,~~~~~,,,|
	|,,,,,,,,,,,,,,,,|
	|,.,,,,,,,,,,,,,,|
	|...,,,,....,,,,,|
	|....,,.....,...,|
	|....,,,,..,,,,,,|
	|..,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	+----------------+
#endif

static Gfx ball_bm2_1_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm2_1[] = {
	0x3905, 0x38c5, 0x4107, 0x5945, 0x6107, 0x5145, 0x5907, 0x7187, 0x8185, 0x8187, 0x7987, 0x8187, 0x7987, 0x7147, 0x6987, 0x6947, 
	0x4105, 0x4907, 0x3905, 0x30c5, 0x5907, 0x5145, 0x5907, 0x6147, 0x6145, 0x6147, 0x5905, 0x6147, 0x6147, 0x5947, 0x6105, 0x5947, 
	0x30c5, 0x30c5, 0x3105, 0x4105, 0x5107, 0x5107, 0x4105, 0x38c5, 0x38c5, 0x4105, 0x40c5, 0x4907, 0x4105, 0x4105, 0x4905, 0x5107, 
	0x30c5, 0x30c5, 0x30c5, 0x30c5, 0x3105, 0x38c5, 0x38c5, 0x4105, 0x30c5, 0x38c5, 0x28c5, 0x30c5, 0x38c5, 0x4905, 0x38c5, 0x30c5, 
	0x28c5, 0x30c5, 0x28c5, 0x30c5, 0x38c5, 0x3905, 0x30c5, 0x30c5, 0x30c5, 0x28c5, 0x30c5, 0x38c5, 0x30c5, 0x30c5, 0x30c5, 0x38c5, 
	0x30c5, 0x30c5, 0x28c5, 0x28c5, 0x38c5, 0x30c5, 0x38c5, 0x30c5, 0x3905, 0x38c5, 0x38c5, 0x30c5, 0x4105, 0x30c5, 0x38c5, 0x4105, 
	0x30c5, 0x28c5, 0x38c5, 0x38c5, 0x38c5, 0x3905, 0x38c5, 0x4905, 0x3907, 0x38c5, 0x4105, 0x4905, 0x5107, 0x5105, 0x4907, 0x4105, 
	0x4105, 0x38c5, 0x3905, 0x38c5, 0x4105, 0x4907, 0x3905, 0x38c5, 0x4905, 0x5107, 0x4105, 0x4105, 0x5105, 0x4105, 0x5907, 0x5945, 
	0x5107, 0x5105, 0x5105, 0x5105, 0x5105, 0x4907, 0x4905, 0x4905, 0x4105, 0x5107, 0x5147, 0x6147, 0x5947, 0x5907, 0x5105, 0x4905, 
	0x6947, 0x6147, 0x6147, 0x6107, 0x6947, 0x6107, 0x6145, 0x6947, 0x6905, 0x6147, 0x6145, 0x6907, 0x5147, 0x5107, 0x6945, 0x6107, 
	0x6947, 0x6947, 0x6945, 0x7147, 0x6945, 0x7147, 0x7945, 0x7147, 0x7147, 0x7147, 0x7147, 0x7147, 0x6947, 0x7105, 0x6147, 0x6147, 
	0x7147, 0x7147, 0x6145, 0x6907, 0x7945, 0x7147, 0x7147, 0x7147, 0x7987, 0x7945, 0x7147, 0x7147, 0x7145, 0x6947, 0x7905, 0x6947, 
	0x6147, 0x6147, 0x6945, 0x7147, 0x7947, 0x7147, 0x7947, 0x7147, 0x7147, 0x7147, 0x7947, 0x7947, 0x7947, 0x7145, 0x7147, 0x7147, 
	0x6947, 0x6947, 0x5905, 0x6147, 0x7947, 0x7147, 0x7147, 0x7145, 0x7147, 0x7945, 0x7147, 0x7947, 0x7145, 0x7947, 0x7947, 0x7147, 
	0x5947, 0x6145, 0x6107, 0x6147, 0x6947, 0x7145, 0x7147, 0x6947, 0x7107, 0x7147, 0x7145, 0x7147, 0x7947, 0x7107, 0x7145, 0x6907, 
	0x6147, 0x6147, 0x5105, 0x5947, 0x7145, 0x6907, 0x6945, 0x6907, 0x6947, 0x7147, 0x6907, 0x6947, 0x7105, 0x6945, 0x6907, 0x7147, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm2_2, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|,,,,,,,,~~~~~~~~|
	|,,,,,,,,,,,,~~~~|
	|,,,,,,..,,,,,,,,|
	|,,,,,,....,,,,,,|
	|,,...........,,,|
	|,............,,,|
	|,............,,,|
	|,,...,.......,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	+----------------+
#endif

static Gfx ball_bm2_2_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm2_2[] = {
	0x6947, 0x6147, 0x5945, 0x5105, 0x5105, 0x4905, 0x5947, 0x6147, 0x7945, 0x8187, 0x8987, 0x8987, 0x8987, 0x8987, 0x89c7, 0x9987, 
	0x5105, 0x5147, 0x5905, 0x5947, 0x38c5, 0x40c5, 0x4105, 0x3905, 0x7107, 0x7187, 0x5105, 0x6905, 0x8187, 0x8187, 0x8147, 0x8187, 
	0x5105, 0x5905, 0x4947, 0x48c5, 0x3905, 0x30c5, 0x30c5, 0x30c5, 0x38c5, 0x40c5, 0x5905, 0x5947, 0x6105, 0x6147, 0x7147, 0x7147, 
	0x4105, 0x38c5, 0x4905, 0x4105, 0x30c5, 0x28c5, 0x38c5, 0x30c5, 0x4105, 0x40c5, 0x30c5, 0x28c5, 0x5905, 0x5947, 0x4905, 0x4905, 
	0x38c5, 0x30c5, 0x30c5, 0x30c5, 0x30c5, 0x30c5, 0x30c5, 0x2085, 0x2885, 0x28c5, 0x2085, 0x30c5, 0x30c5, 0x40c5, 0x3905, 0x4905, 
	0x30c5, 0x2885, 0x3105, 0x30c5, 0x2885, 0x2885, 0x28c5, 0x28c5, 0x2083, 0x2085, 0x2085, 0x2085, 0x38c5, 0x3905, 0x2885, 0x3905, 
	0x4105, 0x30c5, 0x30c5, 0x2885, 0x28c5, 0x2885, 0x28c5, 0x2885, 0x2885, 0x20c5, 0x2085, 0x2085, 0x30c5, 0x38c5, 0x38c5, 0x3905, 
	0x30c5, 0x30c5, 0x4105, 0x30c5, 0x30c5, 0x30c5, 0x30c5, 0x38c5, 0x28c5, 0x30c3, 0x28c5, 0x30c5, 0x38c5, 0x4105, 0x30c5, 0x38c5, 
	0x4905, 0x3905, 0x38c5, 0x4105, 0x4105, 0x40c5, 0x3905, 0x4105, 0x38c5, 0x38c5, 0x3905, 0x38c5, 0x38c5, 0x4105, 0x4107, 0x4945, 
	0x4905, 0x4907, 0x5105, 0x4907, 0x4905, 0x4105, 0x4905, 0x4905, 0x4905, 0x4905, 0x4105, 0x4905, 0x4907, 0x5145, 0x4905, 0x4905, 
	0x6147, 0x6147, 0x5905, 0x5105, 0x5147, 0x5105, 0x5105, 0x4905, 0x4905, 0x4905, 0x4905, 0x5105, 0x5947, 0x5905, 0x5147, 0x5145, 
	0x6905, 0x5945, 0x7107, 0x6945, 0x5907, 0x5105, 0x6145, 0x5905, 0x5145, 0x6107, 0x4905, 0x5105, 0x6147, 0x6105, 0x6147, 0x5907, 
	0x7147, 0x7105, 0x6945, 0x6105, 0x6907, 0x6105, 0x6145, 0x5905, 0x5905, 0x6145, 0x5907, 0x6945, 0x6907, 0x6947, 0x6147, 0x6145, 
	0x6905, 0x6945, 0x7147, 0x7107, 0x6105, 0x6105, 0x6905, 0x6105, 0x6947, 0x6107, 0x6145, 0x6905, 0x6147, 0x6147, 0x6947, 0x6905, 
	0x7147, 0x6907, 0x6947, 0x6905, 0x6105, 0x6905, 0x6105, 0x6107, 0x6945, 0x6907, 0x6947, 0x6147, 0x6945, 0x6147, 0x6147, 0x6947, 
	0x6905, 0x6147, 0x6905, 0x6905, 0x6107, 0x6905, 0x6145, 0x6105, 0x6947, 0x6147, 0x6945, 0x7107, 0x6147, 0x6145, 0x6907, 0x6147, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm2_3, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|~~~~~~~~~~~~,,, |
	|~~~~~~~~~~~,,,, |
	|,~~~~~~~~~~,,,, |
	|,,~~~~~~~~~,,,. |
	|,,,,~~~~~~~,,,. |
	|,,,,,,,~~~~,,,. |
	|,,,,,,,,~~,,,,. |
	|,,,,,,,,,,,,,.. |
	|,,,,,,,,,,,,,.. |
	|,,,,,,,,,,,,,.. |
	|,,,,,,,,,,,,,.. |
	|,,,,,,,,,,,,... |
	|,,,,,,,,,,,,..  |
	|,,,,,,,,,,,...  |
	|,,,,,,,,,,,..   |
	|,,,,,,,,,,...   |
	+----------------+
#endif

static Gfx ball_bm2_3_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm2_3[] = {
	0x91c7, 0xa1c9, 0xa207, 0xa1c9, 0xa209, 0x9187, 0x89c9, 0x91c9, 0x99c9, 0x91cb, 0x81cb, 0x698b, 0x618d, 0x598d, 0x390d, 0x0, 
	0xa1c7, 0xa209, 0x8187, 0x99c7, 0x91c9, 0x99c9, 0x99c9, 0x9189, 0x79c9, 0x694d, 0x9209, 0x898b, 0x414d, 0x0, 0x598b, 0x594d, 
	0x7147, 0x8187, 0x9187, 0x99c7, 0x91c7, 0x99c9, 0x91c7, 0x99c9, 0x918b, 0x81c9, 0x718b, 0x614b, 0x514b, 0x494d, 0x390d, 0x0, 
	0x8187, 0x8987, 0x5905, 0x7147, 0x91c9, 0x9187, 0x91c9, 0x99c7, 0x714b, 0x594b, 0x89c7, 0x798b, 0x390b, 0x0, 0x410b, 0x494d, 
	0x4905, 0x5907, 0x6947, 0x6947, 0x7987, 0x8987, 0x8987, 0x8189, 0x8189, 0x7989, 0x7189, 0x614b, 0x514d, 0x490b, 0x390d, 0x0, 
	0x4905, 0x4907, 0x3905, 0x4905, 0x7949, 0x7947, 0x6147, 0x7149, 0x7189, 0x694b, 0x7989, 0x7989, 0x30ca, 0x0, 0x594d, 0x494b, 
	0x3905, 0x4105, 0x40c5, 0x4107, 0x5907, 0x6947, 0x6947, 0x7149, 0x7149, 0x7989, 0x694b, 0x618b, 0x514d, 0x494b, 0x28ca, 0x0, 
	0x3905, 0x4107, 0x4105, 0x38c5, 0x6149, 0x7147, 0x5107, 0x6147, 0x614b, 0x514b, 0x7149, 0x6949, 0x28ca, 0x0, 0x494d, 0x390b, 
	0x4905, 0x4105, 0x3905, 0x4907, 0x5147, 0x5947, 0x5907, 0x6147, 0x6149, 0x694b, 0x594b, 0x490b, 0x494b, 0x30cd, 0x28c8, 0x0, 
	0x4907, 0x5145, 0x5147, 0x4907, 0x5907, 0x5947, 0x5947, 0x5947, 0x594b, 0x494b, 0x6149, 0x6149, 0x288a, 0x0, 0x414d, 0x390a, 
	0x5947, 0x5947, 0x5105, 0x5947, 0x5947, 0x6147, 0x5949, 0x6107, 0x6149, 0x6149, 0x598b, 0x514d, 0x494b, 0x30cc, 0x28ca, 0x0, 
	0x6147, 0x6107, 0x5945, 0x6147, 0x6107, 0x6147, 0x6147, 0x5947, 0x614d, 0x598b, 0x6149, 0x6149, 0x28ca, 0x0, 0x390b, 0x30cc, 
	0x6147, 0x6147, 0x6147, 0x6147, 0x6107, 0x6147, 0x6947, 0x6149, 0x6949, 0x6189, 0x614b, 0x518d, 0x30c8, 0x28cc, 0x28c8, 0x0, 
	0x6147, 0x6147, 0x6907, 0x6147, 0x6147, 0x6149, 0x6147, 0x6149, 0x5949, 0x390b, 0x6949, 0x6189, 0x288a, 0x0, 0x28ca, 0x28ca, 
	0x6947, 0x6147, 0x6107, 0x6947, 0x6947, 0x6147, 0x6149, 0x6147, 0x5949, 0x618b, 0x4909, 0x28c8, 0x20ca, 0x2888, 0x28ca, 0x0, 
	0x6947, 0x6147, 0x6947, 0x6147, 0x6149, 0x5947, 0x6949, 0x6147, 0x3109, 0x2088, 0x5949, 0x5149, 0x28ca, 0x0, 0x2088, 0x288a, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm3_0, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|  ......,,,,,,,,|
	|   ......,,,,,,,|
	|   .......,,,,,,|
	|    ........,,,,|
	|     ........,,,|
	|      ........,,|
	|       ........,|
	|        ........|
	|         .......|
	|          ......|
	|           .....|
	|            ....|
	|              ..|
	|                |
	|                |
	|                |
	+----------------+
#endif

static Gfx ball_bm3_0_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm3_0[] = {
	0x1884, 0x1884, 0x1844, 0x1884, 0x2045, 0x20c5, 0x2085, 0x28c5, 0x38c5, 0x3907, 0x4105, 0x4107, 0x4905, 0x4947, 0x5105, 0x5947, 
	0x1884, 0x1844, 0x1884, 0x2084, 0x2087, 0x2085, 0x2084, 0x1885, 0x3905, 0x40c7, 0x28c5, 0x38c5, 0x4945, 0x5107, 0x4105, 0x4947, 
	0x1884, 0x1884, 0x2044, 0x1884, 0x1844, 0x1884, 0x2085, 0x2085, 0x2885, 0x30c5, 0x30c5, 0x3907, 0x4105, 0x4105, 0x4907, 0x5145, 
	0x1884, 0x1844, 0x1884, 0x2084, 0x1844, 0x2085, 0x1884, 0x1884, 0x2885, 0x30c5, 0x28c5, 0x2085, 0x4905, 0x5107, 0x3905, 0x4107, 
	0x1884, 0x1884, 0x2044, 0x1884, 0x1844, 0x1884, 0x1882, 0x1845, 0x2085, 0x2085, 0x2885, 0x28c5, 0x30c5, 0x3905, 0x40c5, 0x4947, 
	0x1884, 0x1844, 0x1884, 0x1884, 0x1844, 0x1844, 0x1882, 0x1844, 0x2085, 0x2085, 0x2085, 0x1885, 0x38c5, 0x4105, 0x28c5, 0x30c5, 
	0x1884, 0x1884, 0x2044, 0x1884, 0x1844, 0x1882, 0x1844, 0x1844, 0x1842, 0x1885, 0x2085, 0x2085, 0x2085, 0x2885, 0x30c5, 0x3905, 
	0x1884, 0x1884, 0x1844, 0x1884, 0x1844, 0x1844, 0x1882, 0x1884, 0x1883, 0x2045, 0x1084, 0x1844, 0x28c3, 0x30c5, 0x1885, 0x2885, 
	0x1884, 0x1884, 0x1844, 0x1884, 0x1884, 0x1842, 0x1844, 0x1844, 0x1842, 0x1844, 0x1044, 0x1884, 0x2083, 0x1845, 0x2085, 0x28c5, 
	0x1884, 0x1844, 0x1884, 0x1884, 0x1842, 0x1844, 0x1882, 0x1844, 0x1044, 0x1844, 0x1844, 0x1844, 0x1883, 0x2085, 0x1842, 0x1885, 
	0x1884, 0x1884, 0x1844, 0x1884, 0x1884, 0x1842, 0x1844, 0x1842, 0x1044, 0x1844, 0x1844, 0x1844, 0x1084, 0x1842, 0x1883, 0x1845, 
	0x1884, 0x1844, 0x1884, 0x1884, 0x1844, 0x1844, 0x1882, 0x1844, 0x1044, 0x1844, 0x1844, 0x1844, 0x1082, 0x1842, 0x1084, 0x1842, 
	0x1884, 0x1884, 0x1844, 0x1884, 0x1844, 0x1882, 0x1844, 0x1844, 0x1842, 0x1844, 0x1844, 0x1844, 0x1844, 0x1842, 0x1882, 0x1842, 
	0x1884, 0x1844, 0x1884, 0x1884, 0x1842, 0x1844, 0x1882, 0x1884, 0x1842, 0x1844, 0x1844, 0x1844, 0x1082, 0x1842, 0x1844, 0x1842, 
	0x1884, 0x1844, 0x1884, 0x1084, 0x1842, 0x1844, 0x1884, 0x1044, 0x1842, 0x1842, 0x1842, 0x1042, 0x1042, 0x1042, 0x1044, 0x1042, 
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm3_1, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|..,,,,,,,,,,,,,,|
	|....,,,,,,,,,,,,|
	|......,,,,,,,,,~|
	|........,,,~~~~~|
	|..........,,,~~~|
	|............,,,,|
	| .............,,|
	|   .............|
	|                |
	+----------------+
#endif

static Gfx ball_bm3_1_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm3_1[] = {
	0x5947, 0x5907, 0x5945, 0x6147, 0x6945, 0x6907, 0x6947, 0x6947, 0x7145, 0x6947, 0x7107, 0x7147, 0x7145, 0x7107, 0x6945, 0x6905, 
	0x6147, 0x6147, 0x5105, 0x5945, 0x6107, 0x6947, 0x6107, 0x6947, 0x6907, 0x6947, 0x6105, 0x6947, 0x6945, 0x6905, 0x6947, 0x6907, 
	0x5105, 0x5947, 0x5947, 0x6147, 0x6907, 0x6145, 0x6947, 0x6145, 0x6147, 0x6145, 0x6947, 0x6147, 0x6905, 0x6907, 0x6107, 0x6947, 
	0x5947, 0x6947, 0x4905, 0x5947, 0x6147, 0x6107, 0x6145, 0x6147, 0x6907, 0x6145, 0x6147, 0x6107, 0x6147, 0x6907, 0x6107, 0x6105, 
	0x4905, 0x5145, 0x5147, 0x6107, 0x5945, 0x6147, 0x5907, 0x6145, 0x5907, 0x6147, 0x6945, 0x6147, 0x5905, 0x6947, 0x6107, 0x6947, 
	0x5147, 0x5107, 0x4105, 0x4905, 0x5947, 0x6145, 0x5147, 0x5947, 0x6105, 0x6147, 0x6145, 0x5947, 0x6907, 0x6945, 0x5907, 0x6147, 
	0x38c5, 0x3905, 0x4905, 0x4907, 0x5945, 0x5145, 0x5947, 0x5907, 0x5945, 0x5907, 0x5945, 0x5907, 0x5947, 0x6147, 0x6905, 0x6947, 
	0x38c5, 0x4105, 0x28c5, 0x30c5, 0x5145, 0x5907, 0x4905, 0x4945, 0x5907, 0x5947, 0x5945, 0x5947, 0x6105, 0x6987, 0x6107, 0x5945, 
	0x2085, 0x28c5, 0x30c5, 0x30c5, 0x38c5, 0x3905, 0x4905, 0x5107, 0x5145, 0x5947, 0x5945, 0x5947, 0x6147, 0x6147, 0x6145, 0x7149, 
	0x2085, 0x28c5, 0x2085, 0x2085, 0x38c5, 0x4105, 0x28c5, 0x38c5, 0x5147, 0x6147, 0x4905, 0x4907, 0x6987, 0x71c9, 0x6947, 0x6987, 
	0x1885, 0x2043, 0x1885, 0x2085, 0x28c5, 0x2885, 0x28c5, 0x30c5, 0x38c5, 0x4105, 0x5147, 0x6189, 0x71cb, 0x71c9, 0x71c9, 0x7a0b, 
	0x1885, 0x2043, 0x1084, 0x1843, 0x2885, 0x28c5, 0x2083, 0x2085, 0x3905, 0x5147, 0x28c5, 0x38c5, 0x69cb, 0x69cb, 0x61c9, 0x69cb, 
	0x1842, 0x1842, 0x1882, 0x1845, 0x1883, 0x1885, 0x2085, 0x2085, 0x2085, 0x2885, 0x30c5, 0x30c5, 0x3907, 0x5189, 0x4949, 0x5147, 
	0x1842, 0x1842, 0x1882, 0x1842, 0x1885, 0x1883, 0x1844, 0x1842, 0x2085, 0x28c5, 0x2085, 0x2085, 0x30c5, 0x3907, 0x2885, 0x30c5, 
	0x1042, 0x1042, 0x1042, 0x1042, 0x1042, 0x1042, 0x1042, 0x1842, 0x1882, 0x1044, 0x1883, 0x2085, 0x1885, 0x2083, 0x2085, 0x2085, 
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm3_2, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,,,,,,,,,|
	|,,,,,,,,~~,,,,,,|
	|,,,,,,,~~~~~~~~~|
	|,~~,,~~~~~~~~~~+|
	|,~~~~~~~~~~~~~++|
	|~~~~~~~~~~~~++++|
	|~~~~~~~~+~~~~~~,|
	|~~~~~~~~~~,,,...|
	|,,,,,,,,,.......|
	|,,,,..........  |
	|............    |
	|                |
	+----------------+
#endif

static Gfx ball_bm3_2_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm3_2[] = {
	0x6905, 0x6905, 0x6905, 0x6147, 0x6105, 0x6105, 0x6145, 0x6907, 0x6945, 0x7147, 0x6107, 0x6947, 0x6147, 0x6905, 0x6147, 0x6147, 
	0x6905, 0x6105, 0x6905, 0x6905, 0x6905, 0x6947, 0x6105, 0x6105, 0x6947, 0x6947, 0x6947, 0x6905, 0x6147, 0x6147, 0x6907, 0x6145, 
	0x6947, 0x6907, 0x6907, 0x6105, 0x6945, 0x6107, 0x6945, 0x6947, 0x6905, 0x7147, 0x6947, 0x6147, 0x6147, 0x6147, 0x6107, 0x6147, 
	0x6907, 0x6107, 0x6907, 0x6107, 0x7145, 0x6947, 0x6945, 0x6907, 0x6945, 0x6947, 0x6947, 0x6947, 0x5945, 0x6147, 0x6147, 0x5947, 
	0x6947, 0x6147, 0x6907, 0x6947, 0x6905, 0x7187, 0x7147, 0x7147, 0x6987, 0x7147, 0x6947, 0x6947, 0x6147, 0x6147, 0x5947, 0x6147, 
	0x6947, 0x7145, 0x6907, 0x6947, 0x7147, 0x7187, 0x7147, 0x7147, 0x6987, 0x7147, 0x7187, 0x7987, 0x5947, 0x6189, 0x6987, 0x6147, 
	0x6947, 0x7147, 0x7147, 0x7187, 0x7147, 0x6947, 0x7987, 0x7187, 0x81c9, 0x81c9, 0x81c9, 0x71c9, 0x71c9, 0x6989, 0x69c9, 0x71cb, 
	0x7187, 0x7147, 0x6987, 0x7949, 0x7187, 0x79c7, 0x7949, 0x7187, 0x8a4d, 0x820b, 0x8209, 0x8a4b, 0x8a4f, 0x92cf, 0x71cb, 0x820b, 
	0x7187, 0x7189, 0x79c7, 0x71c9, 0x7987, 0x79cb, 0x81c9, 0x8209, 0x820d, 0x928f, 0x824b, 0x820d, 0x824b, 0x928f, 0x9ad3, 0xabd9, 
	0x8209, 0x8209, 0x6989, 0x79c9, 0x8a4b, 0x820b, 0x79cb, 0x8209, 0x824d, 0x8a4f, 0x8a4d, 0x824d, 0xabdb, 0x9c21, 0x928f, 0xa315, 
	0x7a0b, 0x7a09, 0x820b, 0x7a0b, 0x820b, 0x824b, 0x820d, 0x8a4d, 0x92d1, 0x824d, 0x820d, 0x8a8f, 0x8291, 0x8ad3, 0x7317, 0x51d1, 
	0x720b, 0x79cb, 0x6a0b, 0x720b, 0x79cb, 0x7a0b, 0x720b, 0x79cb, 0x59c9, 0x6189, 0x720d, 0x61cb, 0x3106, 0x1886, 0x5189, 0x4109, 
	0x5149, 0x5189, 0x5987, 0x5149, 0x5187, 0x5147, 0x5147, 0x4907, 0x4147, 0x38c5, 0x3107, 0x3085, 0x20c4, 0x1842, 0x1884, 0x1844, 
	0x3907, 0x38c5, 0x3107, 0x3905, 0x30c5, 0x2885, 0x3905, 0x3105, 0x1844, 0x1842, 0x20c5, 0x2042, 0x1084, 0x1844, 0x1844, 0x1842, 
	0x2085, 0x28c5, 0x20c5, 0x2085, 0x2083, 0x1884, 0x1842, 0x1844, 0x1082, 0x1842, 0x1042, 0x1042, 0x1884, 0x1842, 0x1084, 0x1842, 
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
};

/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "tmpimg26339.rgb".
 *
 *   Size: 16 x 16
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_DECALRGB, G_CC_DECALRGB),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPLoadTextureBlock (ball_bm3_3, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0,
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|,,,,,,,,,,...   |
	|,,,,,,,,,...    |
	|,,,,,,,,,...    |
	|,,,,,,~~...     |
	|,,,,,~+,..      |
	|,,~~++,..       |
	|~~+o+,..        |
	|++o+,...        |
	|+o+,..          |
	|+~...           |
	|,...            |
	|...             |
	|.               |
	|                |
	|                |
	|                |
	+----------------+
#endif

static Gfx ball_bm3_3_C_dummy_aligner1[] = { gsSPEndDisplayList() };

unsigned short ball_bm3_3[] = {
	0x6147, 0x6147, 0x6947, 0x6947, 0x6949, 0x6147, 0x6149, 0x5949, 0x5949, 0x5149, 0x3109, 0x2086, 0x2088, 0x28ca, 0x208a, 0x0, 
	0x6947, 0x6149, 0x6147, 0x6147, 0x5947, 0x5149, 0x6949, 0x5949, 0x28c6, 0x1886, 0x594b, 0x3949, 0x288a, 0x0, 0x2088, 0x20c8, 
	0x6147, 0x6147, 0x6147, 0x5949, 0x5947, 0x5149, 0x5989, 0x618b, 0x59cd, 0x28c8, 0x2086, 0x2088, 0x20c8, 0x2088, 0x28ca, 0x0, 
	0x5947, 0x5949, 0x5947, 0x5947, 0x720f, 0x7ad5, 0x5149, 0x518b, 0x2086, 0x1886, 0x418c, 0x20c6, 0x28ca, 0x0, 0x2088, 0x208a, 
	0x6147, 0x5947, 0x5949, 0x5189, 0x618b, 0x7ad3, 0x8b5d, 0x5a51, 0x20c8, 0x1886, 0x2086, 0x1886, 0x2088, 0x28ca, 0x208a, 0x0, 
	0x71cb, 0x828f, 0x5949, 0x6989, 0x62d7, 0x2908, 0x9359, 0x9c21, 0x1886, 0x2086, 0x1886, 0x1886, 0x28c8, 0x0, 0x2088, 0x208a, 
	0x71cb, 0x824d, 0x928f, 0xa3db, 0xa4a5, 0x62d7, 0x310a, 0x1886, 0x2084, 0x1886, 0x1886, 0x1886, 0x2088, 0x28c8, 0x208a, 0x0, 
	0xabdd, 0x9c61, 0x928f, 0x9ad3, 0x1884, 0x1886, 0x62d5, 0x290a, 0x1886, 0x2086, 0x1884, 0x1886, 0x20ca, 0x0, 0x2088, 0x2888, 
	0xab99, 0xac63, 0x8bdf, 0x5210, 0x2908, 0x2084, 0x1846, 0x1884, 0x1886, 0x1884, 0x1886, 0x1886, 0x2088, 0x288a, 0x28ca, 0x0, 
	0x418c, 0x20c6, 0xa421, 0x7319, 0x1884, 0x1884, 0x1844, 0x1884, 0x1886, 0x1886, 0x2086, 0x1884, 0x20ca, 0x0, 0x2088, 0x288a, 
	0x51d1, 0x2906, 0x1886, 0x1842, 0x1884, 0x1844, 0x1884, 0x1884, 0x1884, 0x1886, 0x1886, 0x1886, 0x2088, 0x28ca, 0x2088, 0x0, 
	0x1844, 0x1882, 0x1884, 0x1844, 0x1884, 0x1884, 0x1844, 0x1882, 0x1886, 0x1888, 0x1884, 0x1886, 0x2888, 0x0, 0x2088, 0x20ca, 
	0x1844, 0x1044, 0x1844, 0x1082, 0x1884, 0x1842, 0x1884, 0x1886, 0x1884, 0x1886, 0x1884, 0x1888, 0x2088, 0x28c8, 0x208a, 0x0, 
	0x1844, 0x1844, 0x1844, 0x1844, 0x1884, 0x1884, 0x1842, 0x1884, 0x1886, 0x1886, 0x1884, 0x1886, 0x288a, 0x0, 0x20c8, 0x2088, 
	0x1842, 0x1042, 0x1082, 0x1044, 0x1844, 0x1882, 0x1884, 0x1084, 0x1844, 0x1884, 0x1886, 0x1886, 0x1886, 0x208a, 0x20c8, 0x0, 
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
};

