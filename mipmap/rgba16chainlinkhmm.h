/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "chainlink0.rgb".
 *
/*
 *   Size: 8 x 8
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16chainlinkHMM_lvl1, G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 8, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--------+
	|,,,,,,,,|
	|.,~..,~.|
	|,,,,,,,,|
	|~..,~..,|
	|,,,,,,,,|
	|.,~..,~.|
	|,,,,,,,,|
	|~..,~..,|
	+--------+
#endif

/*
 *   Size: 4 x 4
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16chainlinkHMM_lvl2, G_IM_FMT_RGBA, G_IM_SIZ_16b, 4, 4, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----+
	|,,,,|
	|,,,,|
	|,,,,|
	|,,,,|
	+----+
#endif

/*
 *   Size: 2 x 2
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16chainlinkHMM_lvl3, G_IM_FMT_RGBA, G_IM_SIZ_16b, 2, 2, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--+
	|,,|
	|,,|
	+--+
#endif

/*
 *   Size: 1 x 1
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16chainlinkHMM_lvl4, G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, 1, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+-+
	|,|
	+-+
#endif

/*
 *   Size: 16 x 16
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16chainlinkHMM, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|.+....+..+....+.|
	|..+..+....+..+..|
	|...++......++...|
	|....+.......+...|
	|..+..+....+..+..|
	|.+....+..+....+.|
	|+......++......+|
	|+.......+.......|
	|.+....+..+....+.|
	|..+..+....+..+..|
	|...++......++...|
	|....+.......+...|
	|..+..+....+..+..|
	|.+....+..+....+.|
	|+......++......+|
	|+.......+.......|
	+----------------+
#endif

static Gfx RGBA16chainlinkHMM_dummy_aligner2[] = { gsSPEndDisplayList() };

unsigned short RGBA16chainlinkHMM_buf[] = {
	0x003f, 0x53ff, 0x0001, 0x0001, 	0x0001, 0x0001, 0x53ff, 0x0021, 
	0x003f, 0x53ff, 0x0001, 0x0001, 	0x0001, 0x0001, 0x53ff, 0x003f, 
	0x53ff, 0x0001, 0x0021, 0x003f, 	0x003f, 0x0021, 0x0001, 0x53ff, 
	0x53ff, 0x0001, 0x0021, 0x003f, 	0x003f, 0x0021, 0x0001, 0x53ff, 
	0x0001, 0x0021, 0x003f, 0x53ff, 	0x53ff, 0x003f, 0x0021, 0x0001, 
	0x0001, 0x0021, 0x003f, 0x53ff, 	0x53ff, 0x003f, 0x0021, 0x0001, 
	0x0021, 0x003f, 0x0001, 0x0001, 	0x0001, 0x0001, 0x53ff, 0x0021, 
	0x0021, 0x003f, 0x0001, 0x0001, 	0x0001, 0x0001, 0x53ff, 0x0021, 
	0x0001, 0x0001, 0x53ff, 0x0021, 	0x003f, 0x53ff, 0x0001, 0x0001, 
	0x0001, 0x0001, 0x53ff, 0x0021, 	0x003f, 0x53ff, 0x0001, 0x0001, 
	0x003f, 0x0021, 0x0001, 0x53ff, 	0x53ff, 0x0001, 0x0021, 0x003f, 
	0x003f, 0x0021, 0x0001, 0x53ff, 	0x53ff, 0x0001, 0x0021, 0x003f, 
	0x53ff, 0x003f, 0x0021, 0x0001, 	0x0001, 0x0021, 0x003f, 0x53ff, 
	0x53ff, 0x003f, 0x0021, 0x0001, 	0x0001, 0x0021, 0x003f, 0x53ff, 
	0x0001, 0x0001, 0x53ff, 0x0021, 	0x0021, 0x003f, 0x0001, 0x0001, 
	0x0001, 0x0001, 0x53ff, 0x0021, 	0x0021, 0x003f, 0x0001, 0x0001, 
	0x003f, 0x53ff, 0x0001, 0x0001, 	0x0001, 0x0001, 0x53ff, 0x0021, 
	0x003f, 0x53ff, 0x0001, 0x0001, 	0x0001, 0x0001, 0x53ff, 0x0021, 
	0x53ff, 0x0001, 0x0021, 0x003f, 	0x003f, 0x0021, 0x0001, 0x53ff, 
	0x53ff, 0x0001, 0x0021, 0x003f, 	0x003f, 0x0021, 0x0001, 0x53ff, 
	0x0001, 0x0021, 0x003f, 0x53ff, 	0x53ff, 0x003f, 0x0021, 0x0001, 
	0x0001, 0x0021, 0x003f, 0x53ff, 	0x53ff, 0x003f, 0x0021, 0x0001, 
	0x0021, 0x003f, 0x0001, 0x0001, 	0x0001, 0x0001, 0x53ff, 0x0021, 
	0x0021, 0x003f, 0x0001, 0x0001, 	0x0001, 0x0001, 0x53ff, 0x0021, 
	0x0001, 0x0001, 0x53ff, 0x0021, 	0x003f, 0x53ff, 0x0001, 0x0001, 
	0x0001, 0x0001, 0x53ff, 0x0021, 	0x003f, 0x53ff, 0x0001, 0x0001, 
	0x003f, 0x0021, 0x0001, 0x53ff, 	0x53ff, 0x0001, 0x0021, 0x003f, 
	0x003f, 0x0021, 0x0001, 0x53ff, 	0x53ff, 0x0001, 0x0021, 0x003f, 
	0x53ff, 0x003f, 0x0021, 0x0001, 	0x0001, 0x0021, 0x003f, 0x53ff, 
	0x53ff, 0x003f, 0x0021, 0x0001, 	0x0001, 0x0021, 0x003f, 0x53ff, 
	0x0001, 0x0001, 0x53ff, 0x0021, 	0x0021, 0x003f, 0x0001, 0x0001, 
	0x0001, 0x0001, 0x53ff, 0x0021, 	0x0021, 0x003f, 0x0001, 0x0001, 
	0x1939, 0x1913, 0x1915, 0x1131, 	0x1135, 0x1915, 0x1915, 0x1937, 
	0x2a3b, 0x0009, 0x0009, 0x21b9, 	0x2a39, 0x0009, 0x0007, 0x21bb, 
	0x1915, 0x10f1, 0x1133, 0x1913, 	0x1913, 0x10b1, 0x1135, 0x1915, 
	0x0009, 0x21b9, 0x323b, 0x0007, 	0x0007, 0x1979, 0x2a3b, 0x0009, 
	0x1937, 0x1913, 0x1113, 0x10ef, 	0x18f5, 0x1153, 0x18d3, 0x112f, 
	0x2a39, 0x0009, 0x0009, 0x21bb, 	0x2a3b, 0x0009, 0x0009, 0x21b9, 
	0x1915, 0x10f1, 0x1135, 0x1911, 	0x1915, 0x10ef, 0x10f5, 0x1955, 
	0x000b, 0x2179, 0x2a39, 0x0009, 	0x000b, 0x1937, 0x2a39, 0x000b, 
	0x1925, 0x1923, 0x10e3, 0x1925, 	0x1121, 0x10e1, 0x1921, 0x10e3, 
	0x1923, 0x10e3, 0x1921, 0x10e3, 	0x10e3, 0x10e1, 0x10e3, 0x1921, 
	0x1923, 0x1923, 0x0000, 0x0000, 	0x0000, 0x0000, 0x1123, 0x18e3, 
	0x1923, 0x0000, 0x0000, 0x0000, };

Gfx RGBA16chainlinkHMM_dl[] = {
	gsDPSetTextureImage( 0, 2, 1, RGBA16chainlinkHMM_buf),
	gsDPSetTile( 0, 2, 0, 0, G_TX_LOADTILE, 0, 0, 0, 0, 0, 0, 0),
	gsDPLoadBlock( G_TX_LOADTILE, 0, 0, 348, 0),
	gsDPSetTile(0, 2, 4, 0, 0, 0, 0, 4, 0, 0, 4, 0),
	gsDPSetTileSize( 0,  2, 2, 15 << G_TEXTURE_IMAGE_FRAC, 15 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 2, 64, 1, 0, 0, 3, 1, 0, 3, 1),
	gsDPSetTileSize( 1,  2, 2, 7 << G_TEXTURE_IMAGE_FRAC, 7 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 80, 2, 0, 0, 2, 2, 0, 2, 2),
	gsDPSetTileSize( 2,  2, 2, 3 << G_TEXTURE_IMAGE_FRAC, 3 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 84, 3, 0, 0, 1, 3, 0, 1, 3),
	gsDPSetTileSize( 3,  2, 2, 1 << G_TEXTURE_IMAGE_FRAC, 1 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 86, 4, 0, 0, 0, 4, 0, 0, 4),
	gsDPSetTileSize( 4,  2, 2, 0 << G_TEXTURE_IMAGE_FRAC, 0 << G_TEXTURE_IMAGE_FRAC),
	gsSPEndDisplayList(),
	gsSPEndDisplayList(),
	gsSPEndDisplayList(),
};
