/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "molecule0.rgba".
 *
/*
 *   Size: 16 x 16
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16moleculeHMM_lvl1, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|++++++o++~+oo+++|
	|+++++o+,,,,~o+++|
	|++++o+,,~~,.~o++|
	|++++o+,~~~,.~o++|
	|++++o~,~~~,.,o++|
	|++++o+,,,,,.~o++|
	|+++++o~,,,.,+o++|
	|+oo*o+~~~~,,oo++|
	|o*%%%o~++~~,~+o+|
	|o%%#%*~~+~,,,,+o|
	|o%%#%*~~~~~~~,,+|
	|o*%%*o~,,,~~~,.~|
	|++ooo+,~,,~~~,.~|
	|o++~~,+o~,,,,,.+|
	|++o+++ooo~,,..~o|
	|+++ooo++oo+~~+o+|
	+----------------+
#endif

/*
 *   Size: 8 x 8
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16moleculeHMM_lvl2, G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 8, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--------+
	|++o+~~oo|
	|+o+,~,+o|
	|+++,,.~o|
	|oo+~,,+o|
	|*%*~+,~+|
	|*%*~,~,,|
	|oo+~,,,,|
	|+++o+,,+|
	+--------+
#endif

/*
 *   Size: 4 x 4
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16moleculeHMM_lvl3, G_IM_FMT_RGBA, G_IM_SIZ_16b, 4, 4, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----+
	|o+~+|
	|o~,+|
	|*o,~|
	|o+~~|
	+----+
#endif

/*
 *   Size: 2 x 2
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16moleculeHMM_lvl4, G_IM_FMT_RGBA, G_IM_SIZ_16b, 2, 2, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--+
	|+~|
	|o~|
	+--+
#endif

/*
 *   Size: 1 x 1
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16moleculeHMM_lvl5, G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, 1, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+-+
	|+|
	+-+
#endif

/*
 *   Size: 32 x 32
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16moleculeHMM, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--------------------------------+
	|++++++++++++++++++++++++++++++++|
	|+++++++++++++++++...++++++++++++|
	|++++++++++++++~,,,,,,.++++++++++|
	|+++++++++++++.,,~~,,,,.,++++++++|
	|++++++++++++~,,~~~~~,,,.++++++++|
	|++++++++++++,,~~~~~~,,,..+++++++|
	|++++++++++++,,~~~~~~~,,..o++++++|
	|+++++++++++~,,~~~~~~~,,..+++++++|
	|+++++++++++.,,~~~~~~,,,..+++++++|
	|+++++++++++~,,,,~~~,,,,..+++++++|
	|++++++++++++.,,,,,,,,,...+++++++|
	|++++++++++++..,,,,,,,....+++++++|
	|+++++++++++++..,,,,.....++++++++|
	|++++++++++++~~~~~~~,,..+++++++++|
	|+++++oooo+~+~~~~~~~~,,.+++++++++|
	|+++*o****oo~~~~~+~~~,,,.++++++++|
	|++**%%%%%*o+~~~+o+~~~,,.++++++++|
	|++*%%%%%%%*o~~~+o+~~~,,,,,.+++++|
	|+**%%%%%%%*o~~~+++~~~,,,,,,.o+++|
	|+o*%%%#%%%*o~~~~~~~~,,~,,,,,.o++|
	|+o%%%%%%%%*o+~~~~~~~,~~~~,,,,.++|
	|+o*%%%%%%%*o+~~~~~,,~~~~~~,,,,++|
	|+o*%%%%%%*oo+,,,,,,~~~~~~~,,,,.+|
	|+oo**%%***o+~,,,,,,~~~~~~~,,,,.+|
	|+++o****oo++~...,,,,~~~~~~,,,..+|
	|++++ooooo++~,,++.,,,~~~~~,,,,.,+|
	|++++~++++~~.,++++,,,,,~,,,,,,.++|
	|++++++,,,..+++++++,,,,,,,,,,..++|
	|++++++++++++++++++~,,,,,,,,..+++|
	|+++++++++++++++++++,.,,,,,..++++|
	|++++++++++++++++++++++....o+++++|
	|++++++++++++++++++++++++++++++++|
	+--------------------------------+
#endif

static Gfx RGBA16moleculeHMM_dummy_aligner2[] = { gsSPEndDisplayList() };

unsigned short RGBA16moleculeHMM_buf[] = {
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x0911, 0x08cd, 0x6be3, 0x0911, 	0x8421, 0x8421, 0x6ba1, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x3a99, 0x0997, 
	0x11d9, 0x11d9, 0x11d9, 0x0995, 	0x0951, 0x090f, 0x635d, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x1197, 0x125b, 0x8421, 0x0913, 
	0x125f, 0x121d, 0x12a1, 0x12a1, 	0x090f, 0x3213, 0x1199, 0x0955, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x3297, 0x1197, 0x125f, 0x12a3, 
	0x12e7, 0x12e7, 0x12e5, 0x12a3, 	0x121d, 0x1199, 0x0951, 0x08cb, 
	0x635b, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x12a3, 0x1327, 0x0993, 0x11db, 
	0x1b29, 0x12a5, 0x1b6b, 0x1bad, 	0x0955, 0x0911, 0x1261, 0x1219, 
	0x8421, 0x8421, 0x0087, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x6b9f, 	0x1197, 0x125d, 0x12e5, 0x1b2b, 
	0x1b6f, 0x1baf, 0x1b2d, 0x1327, 	0x12a1, 0x121b, 0x0995, 0x0911, 
	0x00c9, 0x9ce7, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x3257, 0x8421, 0x8421, 	0x12a3, 0x1329, 0x1197, 0x121d, 
	0x1b2b, 0x12e7, 0x1b6d, 0x1b6f, 	0x0995, 0x0911, 0x12a1, 0x1219, 
	0x8421, 0x8421, 0x0089, 0x635b, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x090d, 	0x1195, 0x121b, 0x12a1, 0x12e7, 
	0x1b2b, 0x1b29, 0x1b27, 0x12a3, 	0x121d, 0x11d9, 0x0955, 0x090d, 
	0x0089, 0x635b, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x3255, 0x8421, 0x8421, 	0x121d, 0x1261, 0x0953, 0x11d9, 
	0x12a3, 0x125f, 0x12a5, 0x12a3, 	0x0951, 0x08cd, 0x1219, 0x1197, 
	0x8421, 0x8421, 0x0087, 0x631b, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x0911, 0x1195, 0x11d9, 0x121b, 
	0x121d, 0x121d, 0x121b, 0x1219, 	0x1195, 0x0953, 0x090d, 0x08c9, 
	0x0045, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x0995, 0x1195, 0x08cb, 0x0911, 
	0x1197, 0x0995, 0x11d9, 0x11d7, 	0x08cb, 0x0087, 0x0953, 0x090f, 
	0x8421, 0x8421, 0x0043, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x08cb, 0x090f, 0x0951, 
	0x0951, 0x0993, 0x0951, 0x0911, 	0x090d, 0x08cb, 0x0089, 0x0043, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x0389, 0x03c9, 0x3351, 0x0349, 
	0x0389, 0x020b, 0x03c9, 0x0389, 	0x0045, 0x8421, 0x0189, 0x0087, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x9481, 0xa501, 0xad01, 
	0x9c81, 0x8c01, 0x6301, 0x8421, 	0x0349, 0x03c9, 0x040b, 0x044b, 
	0x040b, 0x040b, 0x0389, 0x0389, 	0x0309, 0x0287, 0x0185, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0xb59b, 0x8421, 0x8421, 	0xd681, 0xd681, 0xbd81, 0xd641, 
	0x9481, 0x2307, 0xce41, 0xb501, 	0x044b, 0x04cd, 0x03c9, 0x040b, 
	0x040b, 0x0389, 0x0d0f, 0x048d, 	0x0205, 0x00c3, 0x0309, 0x02c7, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0xbde7, 0xcdc1, 	0xe6c3, 0xf703, 0xf743, 0xeec3, 
	0xdec3, 0xce41, 0xb581, 0x7c43, 	0x03c9, 0x044b, 0x048d, 0x15d3, 
	0x1655, 0x0d11, 0x040b, 0x0389, 	0x0389, 0x0309, 0x0287, 0x0143, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0xbdc1, 0xe703, 0x8421, 0x8421, 	0xff83, 0xff43, 0xf743, 0xff83, 
	0xce01, 0xb501, 0xf743, 0xdec3, 	0x048d, 0x1591, 0x03cb, 0x044b, 
	0x040b, 0x0389, 0x1655, 0x0d51, 	0x0287, 0x6085, 0x0349, 0x0309, 
	0x4003, 0x8421, 0x7045, 0x6045, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0xbd9b, 0xd681, 0xef03, 	0xff83, 0xffc5, 0xffc9, 0xff87, 
	0xff83, 0xeec3, 0xd643, 0xb581, 	0x03c9, 0x044b, 0x044d, 0x0d0f, 
	0x15d3, 0x0d11, 0x040b, 0x0389, 	0x0349, 0x02c7, 0x2a07, 0xa089, 
	0x9887, 0x8047, 0x7045, 0x5045, 	0xa4e7, 0x8421, 0x8421, 0x8421, 
	0xe683, 0xf743, 0x8421, 0xa501, 	0xffcb, 0xffc7, 0xffc5, 0xffc9, 
	0xde43, 0xbd81, 0xffc3, 0xef43, 	0x044d, 0x044d, 0x0389, 0x044b, 
	0x0389, 0x0389, 0x048d, 0x044d, 	0xb089, 0xa889, 0x0309, 0x2a07, 
	0x9087, 0x7845, 0xa889, 0x9887, 	0x8421, 0x8421, 0x5045, 0xa4e7, 
	0x8421, 0xb501, 0xe6c3, 0xef43, 	0xffc5, 0xffc7, 0xffc9, 0xffc9, 
	0xffc5, 0xef43, 0xd643, 0xb541, 	0x4c05, 0x0389, 0x040b, 0x040b, 
	0x040b, 0x0389, 0x0389, 0x0349, 	0x0309, 0xb889, 0xb889, 0xb889, 
	0xb089, 0xa889, 0x9887, 0x8847, 	0x7045, 0x4003, 0x8421, 0x8421, 
	0xde83, 0xef03, 0x8421, 0xad01, 	0xffc7, 0xff87, 0xf785, 0xffc7, 
	0xcdc1, 0xad01, 0xf743, 0xe6c3, 	0x0389, 0x0389, 0x9441, 0x0349, 
	0x0309, 0x0309, 0x0389, 0x0349, 	0xc889, 0xc889, 0xb889, 0xc089, 
	0xa087, 0x9087, 0xb889, 0xb089, 	0x6b19, 0x8421, 0x7045, 0x5845, 
	0x8421, 0x9c81, 0xcdc1, 0xe6c3, 	0xef05, 0xef45, 0xef45, 0xef43, 
	0xe6c3, 0xd643, 0xbd81, 0xa4c1, 	0x83c1, 0x0309, 0x0309, 0x0309, 
	0x0309, 0x0309, 0x02c9, 0xb089, 	0xc089, 0xc889, 0xc889, 0xc889, 
	0xc089, 0xb089, 0xa889, 0x9887, 	0x8045, 0x5845, 0x1001, 0x8421, 
	0xb541, 0xce41, 0x8421, 0x944d, 	0xe6c3, 0xde83, 0xde43, 0xdec3, 
	0xad01, 0x9441, 0xd643, 0xbdc1, 	0x0287, 0x0287, 0x6b41, 0x1205, 
	0xa889, 0xb089, 0x0287, 0x0287, 	0xc889, 0xc889, 0xb889, 0xc889, 
	0xa889, 0x9087, 0xc089, 0xb889, 	0x2803, 0x8421, 0x8045, 0x5845, 
	0x8421, 0x8421, 0x8c01, 0xb541, 	0xc5c1, 0xcdc1, 0xcdc1, 0xc5c1, 
	0xbd81, 0xad01, 0x9c41, 0x83c1, 	0x5a81, 0x2101, 0x0185, 0x0185, 
	0x0205, 0x2145, 0x9889, 0xa889, 	0xb889, 0xc089, 0xc089, 0xc089, 
	0xb889, 0xb089, 0xa087, 0x9087, 	0x7845, 0x5045, 0x1801, 0x8421, 
	0x8421, 0x83c1, 0x8421, 0x8421, 	0xad01, 0xacc1, 0x9c81, 0xa4c1, 
	0x7b81, 0x5ac1, 0x9cc1, 0x8c41, 	0x8421, 0x635b, 0x2941, 0x420d, 
	0x9087, 0xa889, 0x0083, 0x7045, 	0xb889, 0xb889, 0xb089, 0xb889, 
	0x9887, 0x8847, 0xb089, 0xa889, 	0x398d, 0x8421, 0x6845, 0x4803, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x6301, 0x7381, 0x8401, 0x83c1, 
	0x7b81, 0x6b01, 0x4a41, 0x2101, 	0x420d, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x5845, 0x8087, 0x9887, 	0xa089, 0xa889, 0xb089, 0xa889, 
	0xa889, 0x9887, 0x8847, 0x7845, 	0x5845, 0x3003, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x39c1, 0x41c1, 0x8421, 0x8c19, 
	0x1081, 0x8421, 0x3981, 0x2901, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x6045, 0x8887, 0x8421, 0x831b, 	0x9887, 0x9887, 0x9087, 0x9887, 
	0x7845, 0x6845, 0x9887, 0x8847, 	0x8421, 0x8421, 0x4803, 0x1001, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x6191, 0x6045, 	0x7045, 0x8045, 0x8847, 0x8847, 
	0x8045, 0x7045, 0x6045, 0x4803, 	0x1801, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x518d, 0x8421, 0x8421, 	0x6045, 0x6845, 0x5045, 0x5845, 
	0x3003, 0x1001, 0x6045, 0x5845, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x731b, 0x2803, 0x2803, 
	0x2803, 0x1001, 0x9ce7, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x5b1d, 0x4297, 0x7b9f, 0x8461, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x635d, 0x2219, 0x8421, 0x8421, 
	0x1193, 0x4299, 0x0a1d, 0x0999, 	0x8421, 0x8421, 0x8c21, 0x7c21, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x7c1f, 0x21d9, 0x0aa3, 
	0x1329, 0x1ae7, 0x0a1b, 0x08cf, 	0x5b19, 0x8463, 0x83e1, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x11d9, 0x1327, 0x8421, 0x635d, 
	0x129f, 0x00d1, 0x1b71, 0x1b29, 	0x8421, 0x8421, 0x3a53, 0x8c63, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8c21, 0x4ad9, 0x0997, 0x12a1, 
	0x1ae9, 0x12e3, 0x11d9, 0x00cf, 	0x3211, 0x8c21, 0x8421, 0x8421, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x1953, 0x0957, 0x8421, 0x7be1, 
	0x0951, 0x0047, 0x11db, 0x11d9, 	0x8421, 0x8421, 0x4253, 0x8c23, 
	0x8421, 0x8421, 0x7be1, 0x841f, 	0x7bdf, 0x8421, 0x32d1, 0x024b, 
	0x028d, 0x0a0f, 0x00c9, 0x298d, 	0x7bdf, 0x8421, 0x8421, 0x8421, 
	0xad4b, 0xbdc3, 0x8421, 0x8c61, 	0x03cb, 0x048b, 0xacc3, 0x6bcb, 
	0x0285, 0x2a8d, 0x048b, 0x03cb, 	0x8421, 0x8421, 0x8463, 0x8423, 
	0x8421, 0xce0d, 0xf741, 0xff83, 	0xe6c1, 0x9d01, 0x0c0b, 0x054f, 
	0x15d3, 0x03cb, 0x0349, 0x19c5, 	0x7211, 0x72d9, 0x8463, 0x8421, 
	0xffc5, 0xffc9, 0x9c97, 0xe701, 	0x0c09, 0x048d, 0xff83, 0xc5c3, 
	0x0ac7, 0x88c9, 0x0d0f, 0x03cb, 	0x831b, 0x8463, 0x9845, 0x7045, 
	0x9c8f, 0xef01, 0xffc7, 0xffc9, 	0xf743, 0xc5c1, 0x3bc7, 0x03cb, 
	0x0389, 0x0b49, 0x8949, 0xc849, 	0xb889, 0x9047, 0x6085, 0x7b9d, 
	0xef05, 0xef03, 0x8c53, 0xce01, 	0x4303, 0x0245, 0xd643, 0xad01, 
	0xd049, 0xc889, 0x0ac9, 0x7949, 	0x6001, 0x5213, 0xb889, 0xa889, 
	0x8421, 0x944b, 0xad01, 0xbd81, 	0xad01, 0x7341, 0x39c5, 0x3291, 
	0x3105, 0xa089, 0xc089, 0xc089, 	0xb089, 0x9887, 0x5803, 0x5255, 
	0x7b8f, 0x6b03, 0x8421, 0x7c21, 	0x6b9d, 0x8c63, 0x5243, 0x420b, 
	0x9887, 0xa889, 0x7a97, 0x8045, 	0x4045, 0x7bdf, 0xa087, 0x7005, 
	0x8421, 0x8421, 0x8423, 0x7bdf, 	0x739f, 0x8421, 0x8421, 0x8421, 
	0x8421, 0x6a13, 0x6845, 0x6803, 	0x6803, 0x4085, 0x5ad7, 0x8c21, 
	0x8421, 0x8421, 0x8421, 0x8421, 	0x8421, 0x8421, 0x8421, 0x8421, 
	0x739d, 0x5a13, 0x8421, 0x8421, 	0x8c21, 0x7c21, 0x5211, 0x7c21, 
	0x8421, 0x8421, 0x8421, 0x635f, 	0x2a5b, 0x531b, 0x8421, 0x8421, 
	0x739f, 0x1a9f, 0x8421, 0x8421, 	0x635b, 0x8c23, 0x0aeb, 0x0995, 
	0x8421, 0x83e3, 0x6b9f, 0x19db, 	0x125f, 0x0111, 0x62d9, 0x8463, 
	0x8453, 0x134d, 0x8421, 0xa4d3, 	0x8421, 0x8421, 0x034b, 0x11cb, 
	0xb591, 0xffc1, 0xce41, 0x0ccd, 	0x04cd, 0x3207, 0x818f, 0x83df, 
	0xce01, 0x1b45, 0xbd89, 0xffc3, 	0xa805, 0x698f, 0x2249, 0xc0c9, 
	0x841b, 0x9c85, 0x7345, 0x5315, 	0x710d, 0xb845, 0x9005, 0x598d, 
	0x739f, 0x8c63, 0x8423, 0x7bdf, 	0x618f, 0x73df, 0x7b9d, 0x694d, 
	0x8421, 0x5b63, 0x221d, 0x7bdf, 	0x0211, 0x73df, 0x9c9d, 0x4397, 
	0xde87, 0x6d43, 0x4207, 0x8991, 	0x898f, 0x718d, 0x8c57, 0x7397, 
	0x6bdb, 0x4319, 0x0000, 0x0000, 	0x0000, 0x0000, 0x8ccf, 0x69cd, 
	0x6b55, 0x0000, 0x0000, 0x0000, };

Gfx RGBA16moleculeHMM_dl[] = {
	gsDPSetTextureImage( 0, 2, 1, RGBA16moleculeHMM_buf),
	gsDPSetTile( 0, 2, 0, 0, G_TX_LOADTILE, 0, 0, 0, 0, 0, 0, 0),
	gsDPLoadBlock( G_TX_LOADTILE, 0, 0, 1372, 0),
	gsDPSetTile(0, 2, 8, 0, 0, 0, 0, 5, 0, 0, 5, 0),
	gsDPSetTileSize( 0,  2, 2, 31 << G_TEXTURE_IMAGE_FRAC, 31 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 4, 256, 1, 0, 0, 4, 1, 0, 4, 1),
	gsDPSetTileSize( 1,  2, 2, 15 << G_TEXTURE_IMAGE_FRAC, 15 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 2, 320, 2, 0, 0, 3, 2, 0, 3, 2),
	gsDPSetTileSize( 2,  2, 2, 7 << G_TEXTURE_IMAGE_FRAC, 7 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 336, 3, 0, 0, 2, 3, 0, 2, 3),
	gsDPSetTileSize( 3,  2, 2, 3 << G_TEXTURE_IMAGE_FRAC, 3 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 340, 4, 0, 0, 1, 4, 0, 1, 4),
	gsDPSetTileSize( 4,  2, 2, 1 << G_TEXTURE_IMAGE_FRAC, 1 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 342, 5, 0, 0, 0, 5, 0, 0, 5),
	gsDPSetTileSize( 5,  2, 2, 0 << G_TEXTURE_IMAGE_FRAC, 0 << G_TEXTURE_IMAGE_FRAC),
	gsSPEndDisplayList(),
};
