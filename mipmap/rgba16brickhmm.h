/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "brick0.rgb".
 *
/*
 *   Size: 16 x 16
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16brickHMM_lvl1, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|+++o*oo+oo+o*oo+|
	|,,,,+,,,,,,,~,,,|
	|,,,,+,,,.,,,~,,,|
	|,,,~o,,,,,,~+,,,|
	|o+++++++*+++++++|
	|+.,,,.,,+.,,,.,,|
	|+..,,,,,+.,,,,,,|
	|o~~~~~~+*~~~~~~+|
	|o++oo~~+++++*+++|
	|,,,~o,,,,,,,+,,,|
	|,,,~+,,,,,,,+,,,|
	|,,,oo,,,,,,~o,,,|
	|o+oo+++oo+++++++|
	|+.,,,,,,+,,,,,,.|
	|+.,,,,,,+,,,,,,.|
	|o,,,,,,~o~~~~,,,|
	+----------------+
#endif

/*
 *   Size: 8 x 8
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16brickHMM_lvl2, G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 8, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--------+
	|~~+~~~+~|
	|,~~,,,~,|
	|~~~~+~~~|
	|+,,~+,,~|
	|~~+,~~+~|
	|,~~,,~~,|
	|+~~~~~~~|
	|~.,,~,,,|
	+--------+
#endif

/*
 *   Size: 4 x 4
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16brickHMM_lvl3, G_IM_FMT_RGBA, G_IM_SIZ_16b, 4, 4, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----+
	|~~~~|
	|~~~~|
	|~~~~|
	|~~~,|
	+----+
#endif

/*
 *   Size: 2 x 2
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16brickHMM_lvl4, G_IM_FMT_RGBA, G_IM_SIZ_16b, 2, 2, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--+
	|~~|
	|~~|
	+--+
#endif

/*
 *   Size: 1 x 1
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16brickHMM_lvl5, G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, 1, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+-+
	|~|
	+-+
#endif

/*
 *   Size: 32 x 32
 *   Number of channels: 4
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16brickHMM, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--------------------------------+
	|%%oo***%%%####%%%%%%#%%%%#%##%%%|
	|,,,,,,,,%,,,,,,,,,,,,,,~*,,,,,,,|
	|,,,,,,,.#,,,,,,,,,,,,,,,*,,,,,,,|
	|,,,,,,,.#,,,,,,,,.,,,,,.o,,,,,,,|
	|.,,,,,,.#,,,,,,,...,,,,,*,,,,,,,|
	|,,,,,,,,#,,,,,,,,,,,,,,,o,,,,,,,|
	|,,,,,,,,#,,,,,,,,,,,,,,,o,,,,,,,|
	|.......~#~,........,...~*,,.....|
	|%#%%%%%%%%%#%%*%%##%%%%%%%%#*%%%|
	|%,,,,,,,,,,,,,,~#,,,,,,,,,,,,,,~|
	|o,,,,,,,,,.,,.,.#,,,,,,,,,.,,,,~|
	|*,...,,,,,.,.,,.#,..,,,,,,.,.,,,|
	|%,,,.,,,,,,,,,,.%,,,,,,,,,,,,,,~|
	|*,,,,,,,,,,,,,..#,,,,,,,,,,,,,.,|
	|%.,,,,,,,,,,...,%,,.,,,,,,,,.,.~|
	|%o+~++++++~+~++o%%o+~~~~++~~+oo%|
	|%%%*%%%**%oo++o*oo*o*%o*%%%%%%*%|
	|,,,.,,,,#,,,.,,,,,,.,,,,%,,.,,,,|
	|,,,,,,,,#,,,,,,,,,,,,,,.%,,.,,,,|
	|,,,,,,,~#,,,,,.,,,,,,,,.#,,,,,,.|
	|.,,,,,,,#,,,,,,,.,,,,,,.#,,,,,,,|
	|,,.,,,,~%,.,,,,,,,,,,,,,%,,,,,,,|
	|,,,,,,,~%,,,,,,,,,,,,,,.%,,,,,,,|
	|,,,,.,,%%,.............+%,.,,,,,|
	|%%#####%%%%####%%%%%%**%%%**%***|
	|*,,,,,,,,,,,,,,~%,,,,,,,,,,,,,,~|
	|%,,,,,,,,,.,,.,,#,,,,,,,,,,,,,,,|
	|%,...,,,,,,,.,,.#,..,,,,,,.,.,,.|
	|%,,,.,,,,,,,,,,,#,,,,,,,,,,,,,,,|
	|%,,,,,,,,,,,,,..%,,,,,,,,,,,,,..|
	|%,,,,,,,,,,,,,..*,,,,,,,,,,,,,,.|
	|%~,,,,,,,,,,,,,+*o+~++++~+~~~~,+|
	+--------------------------------+
#endif

static Gfx RGBA16brickHMM_dummy_aligner2[] = { gsSPEndDisplayList() };

unsigned short RGBA16brickHMM_buf[] = {
	0xd631, 0xd5ef, 0xace7, 0xa4a3, 	0xbd6b, 0xbd6b, 0xc56b, 0xde73, 
	0xd673, 0xe6f7, 0xef39, 0xf779, 	0xef39, 0xeef9, 0xde71, 0xeef7, 
	0xe6f7, 0xe6b5, 0xe6f7, 0xeeb7, 	0xef37, 0xde33, 0xd671, 0xe6f7, 
	0xdeb5, 0xf739, 0xe6b7, 0xf77b, 	0xf77b, 0xe6b5, 0xe6f5, 0xd5f1, 
	0x8005, 0x6841, 0x7801, 0x8003, 	0x7843, 0x598d, 0x8043, 0x8001, 
	0x7843, 0x7041, 0xde73, 0x78c7, 	0x6801, 0x8043, 0x7003, 0x7843, 
	0x8803, 0x6803, 0x8003, 0x7803, 	0x7841, 0x7295, 0x7841, 0x8003, 
	0x7801, 0x7003, 0xcd6b, 0x7043, 	0x7043, 0x7803, 0x6841, 0x7803, 
	0x8041, 0x8841, 0x8843, 0x7003, 	0x7001, 0x7001, 0x8801, 0x2885, 
	0xef39, 0x8801, 0x6841, 0x7041, 	0x8001, 0x8801, 0x8041, 0x8041, 
	0x8041, 0x8841, 0x8843, 0x7001, 	0x7001, 0x7001, 0x8801, 0x414b, 
	0xcce7, 0x8041, 0x7001, 0x7041, 	0x6843, 0x7041, 0x8041, 0x8041, 
	0x7803, 0x8003, 0x7843, 0x7041, 	0x8043, 0x2085, 0x8003, 0x7801, 
	0x8881, 0x8041, 0xf739, 0x9003, 	0x7801, 0x7803, 0x9041, 0x8801, 
	0x6801, 0x8043, 0x7841, 0x6003, 	0x7841, 0x3887, 0x8003, 0x8001, 
	0x8043, 0x8081, 0xb39d, 0x9001, 	0x7801, 0x7803, 0x7001, 0x7841, 
	0x6003, 0x7801, 0x8041, 0x7043, 	0x7043, 0x6801, 0x7043, 0x3085, 
	0xef39, 0x8003, 0x7041, 0x8043, 	0x8003, 0x8803, 0x8001, 0x7803, 
	0x6801, 0x6001, 0x6003, 0x7043, 	0x6883, 0x6801, 0x7003, 0x4949, 
	0xbce7, 0x8003, 0x6843, 0x8043, 	0x7843, 0x7803, 0x7801, 0x7801, 
	0x7043, 0x7041, 0x6803, 0x8805, 	0x8003, 0x3109, 0x7043, 0x8001, 
	0x8883, 0x8003, 0xf739, 0x7043, 	0x7003, 0x7003, 0x6841, 0x6803, 
	0x6843, 0x7043, 0x6803, 0x7003, 	0x8001, 0x410b, 0x7041, 0x7803, 
	0x8043, 0x8043, 0xbca5, 0x7843, 	0x7003, 0x8003, 0x6801, 0x7843, 
	0x7803, 0x7843, 0x8043, 0x8003, 	0x7003, 0x7843, 0x9003, 0x3109, 
	0xf77d, 0x8041, 0x7003, 0x8003, 	0x7801, 0x9003, 0x8005, 0x8801, 
	0x7803, 0x7843, 0x7843, 0x8003, 	0x6803, 0x8003, 0x8803, 0x38c7, 
	0xbca5, 0x8001, 0x7043, 0x8001, 	0x8003, 0x9003, 0x8803, 0x9003, 
	0x3841, 0x3843, 0x3043, 0x2803, 	0x4041, 0x6a13, 0x3001, 0x3003, 
	0x7043, 0x4003, 0xfffd, 0x9109, 	0x4003, 0x4843, 0x4843, 0x4801, 
	0x5003, 0x6041, 0x5801, 0x4043, 	0x5001, 0x7295, 0x6003, 0x4001, 
	0x5885, 0x4845, 0xcdad, 0x7909, 	0x4043, 0x4843, 0x3043, 0x3801, 
	0xde73, 0xef7b, 0xd631, 0xcdf1, 	0xde73, 0xdeb5, 0xd631, 0xe6f7, 
	0xe6f7, 0xde73, 0xde73, 0xef39, 	0xe6b5, 0xe6f7, 0xd5af, 0xd62f, 
	0xdef7, 0xef39, 0xe739, 0xdeb5, 	0xe6b5, 0xce31, 0xcdf1, 0xe671, 
	0xdeb5, 0xde33, 0xe671, 0xe6f9, 	0xcdab, 0xe6f7, 0xde73, 0xe6b7, 
	0x7843, 0x8085, 0xe673, 0x7003, 	0x8845, 0x9043, 0x8043, 0x8885, 
	0x8045, 0x8043, 0x8045, 0x8043, 	0x7043, 0x69cf, 0x7801, 0x7045, 
	0x7803, 0x7883, 0xf77b, 0x78c7, 	0x8885, 0x9085, 0x8845, 0x8885, 
	0x8845, 0x8845, 0x8885, 0x7841, 	0x7045, 0x6a11, 0x7843, 0x7043, 
	0xbca5, 0x7005, 0x8001, 0x8843, 	0x9003, 0x8043, 0x9045, 0x9003, 
	0x8841, 0x8803, 0x6801, 0x6803, 	0x7003, 0x6001, 0x7005, 0x2843, 
	0xffbd, 0x7045, 0x7801, 0x8003, 	0x9043, 0x8043, 0x9005, 0x9803, 
	0x9043, 0x8083, 0x5003, 0x7001, 	0x7003, 0x6803, 0x6803, 0x59d1, 
	0x5801, 0x5801, 0xc52b, 0x8803, 	0x8043, 0x8801, 0x5801, 0x7845, 
	0x4801, 0x7001, 0x7003, 0x8001, 	0x8843, 0x2805, 0x5801, 0x7801, 
	0x5803, 0x5801, 0xf779, 0x8003, 	0x8003, 0xa003, 0x7043, 0x8085, 
	0x4801, 0x6803, 0x7041, 0x7001, 	0x8003, 0x514b, 0x5801, 0x8001, 
	0xd5ef, 0x7003, 0x7003, 0x6801, 	0x6803, 0x6041, 0x8045, 0x8801, 
	0x7001, 0x7803, 0x7803, 0x8803, 	0x7841, 0x7003, 0x7803, 0x3085, 
	0xeef7, 0x6803, 0x7803, 0x7003, 	0x7801, 0x8043, 0x8085, 0x9801, 
	0x7801, 0x7001, 0x8003, 0x8043, 	0x8003, 0x7003, 0x7803, 0x59cf, 
	0x7801, 0x6843, 0xd5ad, 0x7803, 	0x7843, 0xa801, 0x7803, 0x7003, 
	0x7843, 0x6843, 0x7801, 0x8803, 	0x5803, 0x4085, 0x7005, 0x6843, 
	0x7803, 0x6801, 0xef39, 0x7843, 	0x7803, 0x8843, 0x7845, 0x7003, 
	0x7843, 0x7043, 0x8001, 0x8003, 	0x5803, 0x4109, 0x7045, 0x6803, 
	0xde31, 0x5801, 0x7003, 0x7801, 	0x7003, 0x7843, 0x7003, 0x8001, 
	0x7801, 0x7841, 0x6003, 0x7043, 	0x6001, 0x6001, 0x5803, 0x4109, 
	0xe6b5, 0x7085, 0x7001, 0x6803, 	0x6803, 0x8803, 0x7041, 0x8003, 
	0x7043, 0x7801, 0x6803, 0x7843, 	0x6801, 0x7801, 0x5803, 0x7253, 
	0x839d, 0x6ad7, 0xde73, 0x9c21, 	0x7b9d, 0x6b19, 0x7319, 0x7b9d, 
	0x6ad7, 0x7b9d, 0x6b19, 0x735b, 	0x83df, 0xace7, 0x6295, 0x6b19, 
	0xa4e7, 0x7b9d, 0xde31, 0xd631, 	0x62d7, 0x6ad7, 0x5a53, 0x62d7, 
	0x5a95, 0x6ad7, 0x835d, 0x7bdd, 	0xa4a5, 0xdeb3, 0x7b9f, 0x9421, 
	0xef37, 0xe675, 0xde73, 0xd5ad, 	0xeeb7, 0xeef5, 0xd5ef, 0xc5ad, 
	0xcdad, 0xe673, 0xc4a5, 0xac63, 	0x82d5, 0x9ad7, 0xc4a7, 0xc4e7, 
	0xbca3, 0xbca5, 0xbce9, 0xac1f, 	0xc4a5, 0xd631, 0xbca5, 0xcdad, 
	0xe739, 0xeeb5, 0xdeb5, 0xde73, 	0xe631, 0xd5ef, 0xd56b, 0xde73, 
	0x8803, 0x6803, 0x7803, 0x7801, 	0x6843, 0x514b, 0x7801, 0x8001, 
	0x7803, 0x7001, 0xf739, 0x6883, 	0x7003, 0x7841, 0x6801, 0x7803, 
	0x8803, 0x6801, 0x7801, 0x7803, 	0x7041, 0x50c7, 0x7801, 0x8003, 
	0x7801, 0x6001, 0xde31, 0x7001, 	0x6841, 0x7803, 0x7001, 0x7803, 
	0x8041, 0x8841, 0x8843, 0x7003, 	0x7001, 0x7001, 0x8041, 0x494d, 
	0xff7b, 0x8001, 0x6841, 0x7041, 	0x6803, 0x7041, 0x8041, 0x7041, 
	0x8041, 0x8843, 0x8001, 0x7001, 	0x7001, 0x7003, 0x8801, 0x2885, 
	0xeef7, 0x8001, 0x7001, 0x6041, 	0x6803, 0x7041, 0x8041, 0x8043, 
	0x7803, 0x8003, 0x7003, 0x7041, 	0x8041, 0x59d1, 0x8003, 0x7801, 
	0x8841, 0x8081, 0xff7b, 0x9043, 	0x6801, 0x7001, 0xa801, 0x8001, 
	0x7843, 0x8001, 0x7803, 0x7841, 	0x8001, 0x30c7, 0x8003, 0x7801, 
	0x8043, 0x8041, 0xffbd, 0x9041, 	0x7001, 0x5001, 0x7841, 0x7801, 
	0x6001, 0x7003, 0x6843, 0x6843, 	0x7043, 0x6801, 0x7043, 0x514b, 
	0xef39, 0x8003, 0x7843, 0x6841, 	0x8001, 0x8803, 0x8801, 0x7801, 
	0x6003, 0x7003, 0x6843, 0x7041, 	0x6843, 0x7003, 0x6841, 0x3085, 
	0xff7b, 0x8003, 0x7043, 0x8043, 	0x7001, 0x8003, 0x8001, 0x7803, 
	0x5801, 0x6843, 0x7043, 0x8005, 	0x7841, 0x59cf, 0x7043, 0x8001, 
	0x5003, 0x8041, 0xf6f7, 0x7043, 	0x7843, 0x7805, 0x6803, 0x6801, 
	0x7043, 0x7043, 0x7003, 0x8005, 	0x8001, 0x38c7, 0x7041, 0x8003, 
	0x8883, 0x7803, 0xddef, 0x7043, 	0x7001, 0x7805, 0x6001, 0x7843, 
	0x6803, 0x7043, 0x8001, 0x7843, 	0x7003, 0x8043, 0x8003, 0x7255, 
	0xde2f, 0x8043, 0x7803, 0x8003, 	0x8003, 0x9005, 0x8803, 0x8001, 
	0x7003, 0x7843, 0x7843, 0x7801, 	0x7003, 0x8043, 0x8803, 0x3087, 
	0xe673, 0x8001, 0x7041, 0x8003, 	0x8003, 0x9805, 0x8803, 0x8803, 
	0x40c7, 0x5109, 0x4087, 0x40c5, 	0x590b, 0xe6f7, 0x3887, 0x38c5, 
	0x3843, 0x1843, 0xe673, 0x494b, 	0x1843, 0x3087, 0x2041, 0x1843, 
	0x1803, 0x3085, 0x30c7, 0x3883, 	0x2843, 0x735b, 0x2043, 0x3043, 
	0x4085, 0x38c9, 0xe6f7, 0x714b, 	0x40c7, 0x4909, 0x3107, 0x4109, 
	0xd631, 0xdeb5, 0xef39, 0xf77b, 	0xef39, 0xf77b, 0xf73b, 0xe6f7, 
	0xd671, 0xde33, 0xe6f5, 0xffbd, 	0xf7bd, 0xf77b, 0xf77b, 0xe6f7, 
	0xde73, 0xdef7, 0xd631, 0xcdef, 	0xde73, 0xce31, 0xcdef, 0xde73, 
	0xdeb5, 0xde73, 0xcdf1, 0xc62f, 	0xd673, 0xcdaf, 0xcded, 0xc5af, 
	0x7801, 0x7885, 0xddef, 0x7043, 	0x8085, 0x9043, 0x8885, 0x8885, 
	0x8045, 0x8845, 0x8085, 0x8043, 	0x7045, 0x7a51, 0x7801, 0x6885, 
	0x7003, 0x8083, 0xe675, 0x7883, 	0x8885, 0x9803, 0x8045, 0x8885, 
	0x8085, 0x8843, 0x8885, 0x7843, 	0x7885, 0x7253, 0x7003, 0x6045, 
	0xeeb5, 0x6845, 0x8001, 0x8003, 	0x9043, 0x6803, 0x7803, 0x9043, 
	0x9003, 0x8083, 0x6003, 0x7001, 	0x7803, 0x6003, 0x7003, 0x38c7, 
	0xef79, 0x7005, 0x8001, 0x8043, 	0xa003, 0x8043, 0x9005, 0xa043, 
	0x8803, 0x8083, 0x7803, 0x7001, 	0x7003, 0x6803, 0x6803, 0x3909, 
	0x5001, 0x5801, 0xe675, 0x8801, 	0x7003, 0x9801, 0x6001, 0x7043, 
	0x8001, 0x7001, 0x7043, 0x8801, 	0x8803, 0x3087, 0x5803, 0x8001, 
	0x5001, 0x6001, 0xef39, 0x8803, 	0x9003, 0x8803, 0x9801, 0x8085, 
	0x5801, 0x7001, 0x7801, 0x7803, 	0x8003, 0x3887, 0x5841, 0x8001, 
	0xde31, 0x6803, 0x7003, 0x6801, 	0x6801, 0xb003, 0x7041, 0x8801, 
	0x7001, 0x7801, 0x7003, 0x8043, 	0x8001, 0x7803, 0x7003, 0x38c7, 
	0xef39, 0x6803, 0x7001, 0x7803, 	0x7001, 0x8045, 0x8843, 0x9001, 
	0x6801, 0x7803, 0x8001, 0x8003, 	0x8843, 0x7001, 0x7803, 0x38c9, 
	0x7803, 0x6803, 0xe675, 0x7041, 	0x7801, 0x9043, 0x7003, 0x7043, 
	0x7803, 0x7043, 0x8001, 0x8003, 	0x5803, 0x3087, 0x7045, 0x6843, 
	0x7801, 0x6843, 0xe6b3, 0x7803, 	0x7803, 0x9843, 0x7003, 0x7845, 
	0x7843, 0x7005, 0x8001, 0x8001, 	0x5803, 0x3885, 0x7043, 0x6845, 
	0xe673, 0x7803, 0x7803, 0x7043, 	0x7001, 0x8005, 0x7841, 0x8843, 
	0x7803, 0x8043, 0x7001, 0x8003, 	0x6843, 0x8001, 0x6001, 0x3085, 
	0xcdad, 0x7043, 0x8003, 0x7003, 	0x7803, 0x8803, 0x7043, 0x8843, 
	0x7801, 0x8003, 0x7041, 0x8003, 	0x6043, 0x7803, 0x6843, 0x3885, 
	0x48c9, 0x4949, 0xd631, 0x7295, 	0x494b, 0x494b, 0x410b, 0x598d, 
	0x498d, 0x51cf, 0x3909, 0x498d, 	0x414d, 0x8359, 0x498d, 0x498d, 
	0x8319, 0x6253, 0xcdef, 0xac63, 	0x839d, 0x8b9d, 0x7b19, 0x8319, 
	0x5a13, 0x59cf, 0x7a53, 0x82d7, 	0x51cf, 0x8ad7, 0x5a11, 0x51d1, 
	0xab19, 0x9255, 0x9ad5, 0xa39d, 	0xbd29, 0xb39d, 0xb39d, 0xab5b, 
	0xbb9d, 0xab9d, 0xb31b, 0xac61, 	0xc4e7, 0xab9d, 0xb39d, 0xab5b, 
	0x7001, 0x6109, 0x7801, 0x7801, 	0x8001, 0x7801, 0xab17, 0x6801, 
	0x7001, 0x68c7, 0x7001, 0x7001, 	0x6801, 0x7801, 0x91cf, 0x6801, 
	0x7803, 0x7801, 0x7801, 0x694b, 	0xa359, 0x7801, 0x8003, 0x7801, 
	0x6801, 0x6801, 0x7801, 0x6109, 	0x9211, 0x7801, 0x7801, 0x8003, 
	0x68c7, 0x7295, 0x60c9, 0x6909, 	0x7909, 0x70c9, 0xc463, 0x70c7, 
	0x70c9, 0x7a11, 0x70c7, 0x7909, 	0x68c9, 0x7909, 0xa35b, 0x7109, 
	0xb4a5, 0x9ad7, 0xa2d9, 0xab59, 	0xb35b, 0xab1b, 0x9b17, 0x9b5d, 
	0xbd29, 0xa319, 0xa2d7, 0xb35b, 	0xab19, 0xab19, 0x92d9, 0x9b9d, 
	0x7801, 0x8001, 0xa255, 0x6001, 	0x6801, 0x6109, 0x7801, 0x6801, 
	0x7803, 0x9001, 0xab1b, 0x6001, 	0x7001, 0x6087, 0x7801, 0x6001, 
	0xa2d7, 0x6001, 0x6801, 0x8001, 	0x8001, 0x7001, 0x7001, 0x6109, 
	0x9ad9, 0x6801, 0x7803, 0x8001, 	0x7801, 0x7801, 0x7001, 0x5085, 
	0x8253, 0x8213, 0xbca7, 0x7a51, 	0x618f, 0x8b19, 0x820f, 0x7a11, 
	0x79d1, 0x7a0f, 0xbd29, 0x8253, 	0x8253, 0x9bdf, 0x8253, 0x8213, 
	0xb39d, 0xa319, 0xab5b, 0x9b9f, 	0xb4e5, 0x9253, 0x79cf, 0xa295, 
	0xa2d7, 0x9255, 0x9a95, 0x935b, 	0xbce7, 0x9b59, 0xa319, 0xab5b, 
	0x7001, 0x718d, 0x7001, 0x7801, 	0x8001, 0x7001, 0xb35b, 0x7001, 
	0x7801, 0x6909, 0x7801, 0x7001, 	0x6801, 0x7001, 0xa319, 0x7001, 
	0x7001, 0x6803, 0x7001, 0x798d, 	0xab59, 0x7001, 0x8001, 0x7801, 
	0x7803, 0x7001, 0x7801, 0x690b, 	0xa319, 0x7801, 0x7801, 0x7801, 
	0x6909, 0xa3df, 0x6909, 0x714d, 	0x6909, 0x690b, 0xac21, 0x5909, 
	0x60c7, 0x7255, 0x6109, 0x6109, 	0x714d, 0x7909, 0xac21, 0x60c7, 
	0xb463, 0xab5b, 0xab9d, 0xbb9f, 	0xab5b, 0xa35b, 0xa35b, 0x9c21, 
	0xb4a5, 0x9ad7, 0x9ad7, 0xab5b, 	0xab5b, 0x9ad7, 0x92d9, 0x8b59, 
	0x7001, 0x8001, 0xab1b, 0x6001, 	0x6801, 0x690b, 0x8001, 0x7001, 
	0x8801, 0x9001, 0xa35b, 0x6801, 	0x7001, 0x5845, 0x7801, 0x6801, 
	0xab1b, 0x6001, 0x7801, 0x8801, 	0x8001, 0x8001, 0x7001, 0x610b, 
	0xa319, 0x6801, 0x7801, 0x8001, 	0x8001, 0x7801, 0x8001, 0x4845, 
	0x58c7, 0x68c7, 0xabdf, 0x5845, 	0x60c7, 0x598f, 0x6085, 0x6109, 
	0x798f, 0x81cf, 0xac1f, 0x794b, 	0x6109, 0x614b, 0x794b, 0x690b, 
	0x894b, 0x89d1, 0x9b17, 0x918d, 	0x918d, 0x9211, 0x9295, 0x918d, 
	0x9253, 0x7845, 0x7085, 0x798d, 	0x81cd, 0x7845, 0x7085, 0x794b, 
	0x8a53, 0x894b, 0x918d, 0x81cf, 	0x9295, 0x914d, 0x894b, 0x798d, 
	0x7909, 0x798f, 0x9295, 0x7909, 	0x7949, 0x798f, 0x8a95, 0x8109, 
	0x91cf, 0x8a53, 0x9253, 0x814b, 	0x894b, 0x8a11, 0x9295, 0x89cf, 
	0x8a55, 0x70c5, 0x7085, 0x8a11, 	0x8a11, 0x70c5, 0x7087, 0x798d, 
	0x9295, 0x99cf, 0x918f, 0x8253, 	0x8a53, 0x918b, 0x918d, 0x714d, 
	0x6803, 0x7109, 0x81cf, 0x6801, 	0x7885, 0x6085, 0x8211, 0x7885, 
	0x818d, 0x91cf, 0x814d, 0x89cd, 	0x818f, 0x814b, 0x89cf, 0x818d, 
	0x89d1, 0x89cd, 0x798d, 0x89cf, 	0x898b, 0x70c9, 0x814d, 0x794b, 
	0x89cf, 0x818d, 0x0000, 0x0000, 	0x0000, 0x0000, 0x818d, 0x818d, 
	0x818d, 0x0000, 0x0000, 0x0000, };

Gfx RGBA16brickHMM_dl[] = {
	gsDPSetTextureImage( 0, 2, 1, RGBA16brickHMM_buf),
	gsDPSetTile( 0, 2, 0, 0, G_TX_LOADTILE, 0, 0, 0, 0, 0, 0, 0),
	gsDPLoadBlock( G_TX_LOADTILE, 0, 0, 1372, 0),
	gsDPSetTile(0, 2, 8, 0, 0, 0, 0, 5, 0, 0, 5, 0),
	gsDPSetTileSize( 0,  2, 2, 31 << G_TEXTURE_IMAGE_FRAC, 31 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 4, 256, 1, 0, 0, 4, 1, 0, 4, 1),
	gsDPSetTileSize( 1,  2, 2, 15 << G_TEXTURE_IMAGE_FRAC, 15 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 2, 320, 2, 0, 0, 3, 2, 0, 3, 2),
	gsDPSetTileSize( 2,  2, 2, 7 << G_TEXTURE_IMAGE_FRAC, 7 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 336, 3, 0, 0, 2, 3, 0, 2, 3),
	gsDPSetTileSize( 3,  2, 2, 3 << G_TEXTURE_IMAGE_FRAC, 3 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 340, 4, 0, 0, 1, 4, 0, 1, 4),
	gsDPSetTileSize( 4,  2, 2, 1 << G_TEXTURE_IMAGE_FRAC, 1 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 342, 5, 0, 0, 0, 5, 0, 0, 5),
	gsDPSetTileSize( 5,  2, 2, 0 << G_TEXTURE_IMAGE_FRAC, 0 << G_TEXTURE_IMAGE_FRAC),
	gsSPEndDisplayList(),
};
