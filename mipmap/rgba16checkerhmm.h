/*
 * Do not edit this file.  It was automatically generated
 * by "rgb2c" from the file "checker0.rgb".
 *
/*
 *   Size: 16 x 16
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16checkerHMM_lvl1, G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 16, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----------------+
	|...,####,..,####|
	|...,####,..,####|
	|...,####,..,####|
	|,,,,####,,,,####|
	|####,,,,####,,,,|
	|####,..,####,...|
	|####,..,####,...|
	|####,,,,####,,,,|
	|,,,,####,,,,####|
	|...,####,..,####|
	|...,####,..,####|
	|,,,,####,,,,####|
	|####,,,,####,,,,|
	|####,..,####,...|
	|####,..,####,...|
	|####,..,####,...|
	+----------------+
#endif

/*
 *   Size: 8 x 8
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16checkerHMM_lvl2, G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 8, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--------+
	|.,##,,##|
	|,,##,,%#|
	|##,,##,,|
	|##,,##,,|
	|,,##,,##|
	|,,##,,##|
	|#%,,##,,|
	|##,,##,.|
	+--------+
#endif

/*
 *   Size: 4 x 4
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16checkerHMM_lvl3, G_IM_FMT_RGBA, G_IM_SIZ_16b, 4, 4, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+----+
	|~%~%|
	|%~*~|
	|~*~%|
	|%~%~|
	+----+
#endif

/*
 *   Size: 2 x 2
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16checkerHMM_lvl4, G_IM_FMT_RGBA, G_IM_SIZ_16b, 2, 2, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--+
	|oo|
	|oo|
	+--+
#endif

/*
 *   Size: 1 x 1
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16checkerHMM_lvl5, G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, 1, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+-+
	|o|
	+-+
#endif

/*
 *   Size: 32 x 32
 *   Number of channels: 3
 *   Number of bits per texel: 16 (G_IM_SIZ_16b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, (levels-1), G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (RGBA16checkerHMM, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */

#if 0	/* Image preview */
	+--------------------------------+
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|........########........########|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	|########........########........|
	+--------------------------------+
#endif

static Gfx RGBA16checkerHMM_dummy_aligner2[] = { gsSPEndDisplayList() };

unsigned short RGBA16checkerHMM_buf[] = {
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x18c7, 0x2109, 0x18c7, 	0x18c7, 0x18c7, 0x18c7, 0x18c7, 
	0x18c7, 0x18c7, 0x18c7, 0x294b, 	0xf7bd, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x18c7, 0x294b, 	0xf7bd, 0xffff, 0xffff, 0xffff, 
	0x18c7, 0x294b, 0x18c7, 0x18c7, 	0xffff, 0xffff, 0xf7bd, 0xffff, 
	0x18c7, 0x294b, 0x2109, 0x18c7, 	0xffff, 0xffff, 0xf7bd, 0xffff, 
	0x18c7, 0x18c7, 0x1085, 0x2109, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x1085, 0x294b, 	0xf7bd, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x39cf, 0x294b, 0x294b, 	0xf7bd, 0xef7b, 0xe739, 0xf7bd, 
	0x2109, 0x39cf, 0x318d, 0x294b, 	0xf7bd, 0xf7bd, 0xe739, 0xffff, 
	0xf7bd, 0xf7bd, 0xf7bd, 0xef7b, 	0x318d, 0x294b, 0x2109, 0x39cf, 
	0xe739, 0xffff, 0xf7bd, 0xef7b, 	0x318d, 0x294b, 0x2109, 0x294b, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0x1085, 0x294b, 0x2109, 0x18c7, 
	0xffff, 0xffff, 0xf7bd, 0xffff, 	0x1085, 0x18c7, 0x2109, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0x2109, 0x18c7, 0x1085, 0x294b, 
	0xf7bd, 0xffff, 0xffff, 0xffff, 	0x2109, 0x18c7, 0x1085, 0x18c7, 
	0xf7bd, 0xef7b, 0xf7bd, 0xf7bd, 	0x2109, 0x39cf, 0x318d, 0x294b, 
	0xf7bd, 0xef7b, 0xe739, 0xffff, 	0x2109, 0x294b, 0x318d, 0x294b, 
	0x294b, 0x294b, 0x2109, 0x39cf, 	0xe739, 0xf7bd, 0xf7bd, 0xef7b, 
	0x318d, 0x294b, 0x2109, 0x39cf, 	0xe739, 0xffff, 0xf7bd, 0xf7bd, 
	0x1085, 0x2109, 0x18c7, 0x18c7, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x1085, 0x294b, 0x2109, 0x18c7, 	0xffff, 0xffff, 0xf7bd, 0xffff, 
	0x18c7, 0x18c7, 0x1085, 0x2109, 	0xffff, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x18c7, 0x1085, 0x294b, 	0xf7bd, 0xffff, 0xffff, 0xffff, 
	0x2109, 0x39cf, 0x294b, 0x294b, 	0xf7bd, 0xef7b, 0xe739, 0xf7bd, 
	0x2109, 0x39cf, 0x318d, 0x294b, 	0xf7bd, 0xf7bd, 0xe739, 0xffff, 
	0xf7bd, 0xf7bd, 0xf7bd, 0xef7b, 	0x318d, 0x294b, 0x2109, 0x39cf, 
	0xe739, 0xffff, 0xf7bd, 0xef7b, 	0x318d, 0x294b, 0x2109, 0x294b, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0x1085, 0x294b, 0x2109, 0x18c7, 
	0xffff, 0xffff, 0xf7bd, 0xffff, 	0x1085, 0x18c7, 0x2109, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0x2109, 0x18c7, 0x18c7, 0x294b, 
	0xf7bd, 0xffff, 0xffff, 0xffff, 	0x2109, 0x18c7, 0x18c7, 0x18c7, 
	0xffff, 0xffff, 0xffff, 0xffff, 	0x18c7, 0x294b, 0x2109, 0x18c7, 
	0xffff, 0xffff, 0xf7bd, 0xffff, 	0x18c7, 0x18c7, 0x2109, 0x18c7, 
	0x1085, 0x294b, 0xf7bd, 0xffff, 	0x2109, 0x2109, 0xf7bd, 0xffff, 
	0xe739, 0xe739, 0x294b, 0x39cf, 	0xe739, 0xf7bd, 0x39cf, 0x318d, 
	0xf7bd, 0xef7b, 0x318d, 0x318d, 	0xef7b, 0xef7b, 0x318d, 0x2109, 
	0x318d, 0x318d, 0xf7bd, 0xef7b, 	0x318d, 0x2109, 0xef7b, 0xef7b, 
	0x2109, 0x318d, 0xef7b, 0xef7b, 	0x318d, 0x318d, 0xe739, 0xffff, 
	0xef7b, 0xef7b, 0x2109, 0x318d, 	0xe739, 0xffff, 0x318d, 0x318d, 
	0xf7bd, 0xe739, 0x318d, 0x318d, 	0xef7b, 0xe739, 0x39cf, 0x294b, 
	0x2109, 0x2109, 0xffff, 0xffff, 	0x2109, 0x1085, 0xffff, 0xffff, 
	0x4211, 0xce73, 0x5295, 0xd6b5, 	0xc631, 0x4a53, 0xce73, 0x5ad7, 
	0x5295, 0xbdef, 0x5ad7, 0xce73, 	0xce73, 0x4211, 0xdef7, 0x4a53, 
	0x8421, 0x9ce7, 0x0000, 0x0000, 	0x0000, 0x0000, 0x94a5, 0x8c63, 
	0x8c63, 0x0000, 0x0000, 0x0000, };

Gfx RGBA16checkerHMM_dl[] = {
	gsDPSetTextureImage( 0, 2, 1, RGBA16checkerHMM_buf),
	gsDPSetTile( 0, 2, 0, 0, G_TX_LOADTILE, 0, 0, 0, 0, 0, 0, 0),
	gsDPLoadBlock( G_TX_LOADTILE, 0, 0, 1372, 0),
	gsDPSetTile(0, 2, 8, 0, 0, 0, 0, 5, 0, 0, 5, 0),
	gsDPSetTileSize( 0,  2, 2, 31 << G_TEXTURE_IMAGE_FRAC, 31 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 4, 256, 1, 0, 0, 4, 1, 0, 4, 1),
	gsDPSetTileSize( 1,  2, 2, 15 << G_TEXTURE_IMAGE_FRAC, 15 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 2, 320, 2, 0, 0, 3, 2, 0, 3, 2),
	gsDPSetTileSize( 2,  2, 2, 7 << G_TEXTURE_IMAGE_FRAC, 7 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 336, 3, 0, 0, 2, 3, 0, 2, 3),
	gsDPSetTileSize( 3,  2, 2, 3 << G_TEXTURE_IMAGE_FRAC, 3 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 340, 4, 0, 0, 1, 4, 0, 1, 4),
	gsDPSetTileSize( 4,  2, 2, 1 << G_TEXTURE_IMAGE_FRAC, 1 << G_TEXTURE_IMAGE_FRAC),
	gsDPSetTile(0, 2, 1, 342, 5, 0, 0, 0, 5, 0, 0, 5),
	gsDPSetTileSize( 5,  2, 2, 0 << G_TEXTURE_IMAGE_FRAC, 0 << G_TEXTURE_IMAGE_FRAC),
	gsSPEndDisplayList(),
};
